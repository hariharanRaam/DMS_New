@model DMS.Model.UserGroups_Model.UserGroups
@{
    Layout = "~/Views/Shared/_LayoutNew.cshtml";
}

<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>UserGroup-Roles Mapping</title>

    <style>
        
 .k-dropdown-wrap.k-state-default{
            background-clip: padding-box;
           
    display: block;
    height:90%;
    width:initial;
    padding: 0.4375rem 1.875rem 0.4375rem 0.875rem;
    -moz-padding-start: calc(0.875rem - 3px);
    font-size: 0.7075rem;
    font-weight: 400;
    line-height: 1.15;
    color: #697a8d;
    background-color: #fff;
    background-repeat: no-repeat;
    background-position: right 0.875rem center;
    background-size: 17px 12px;
    border: 1px solid #d9dee3;
    border-radius: 0.375rem;
    transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
    -webkit-appearance: none;
    -moz-appearance: none;
}
        .k-item{
             background-color: #fff;
             background-position: right 0.875rem center;
             
             
        }
        .k-content{
            width:100%;
        }
        /*.k-button{
             background-color: transparent;
              color: blue;
              border: aliceblue;

        }*/
        .k-grid{
             color: #697a8d;
    background-color: #fff;
        }
        .k-grid-header th.k-header{
            text-overflow: ellipsis;
    /*text-align: center;*/
    border-width:0px;
    text-transform: none;
    font-size: 0.75rem;
    letter-spacing: 1px;
    font-weight: 500;
        }
        .k-pager-info {
    float: right;
    text-transform: none;
    font-size: 0.75rem;
    letter-spacing: 1px;
    font-weight: 500;
    padding: 0 1.333em;
}
        .k-pager-sizes {
    display: inline-block;
    padding-top: 1px;
    text-transform: none;
    font-size: 0.90rem;
    letter-spacing: 1px;
    font-weight: 500;
}
         .k-footer{
             background-color: #fff;
        }
 .k-widget{
      background-color: #fff;
 }
        .k-header {
        background-color: #fff;
        }
        .k-grid td {
    white-space: nowrap;
    background-color: #fff;
    border-color: inherit;
    border-width: 1px 0 0 0px;
    /* text-align: center; */
}
        
    .k-state-selected {
        color: #000;
        border-color: inherit;
    }

    </style>

    <style>
        ul {
            display: block;
        }

        .box-header {
            padding: 0px !important;
        }

        .btnsubmit {
            color: #fff;
            border-radius: 5px;
            padding: 8px 25px;
            border: 0 none;
            background-color: #337ab7;
        }

    </style>

</head>
<body>
    <div class="content-wrapper">
        <div class="container-xxl flex-grow-1 container-p-y">
            <div class="card-body" style="margin-top:-9px;">
                <h5 class="mobile-card-header">Trainer Master</h5>
                <form id="formAccountSettings" method="POST" onsubmit="return false">
                    <div class="row" id="header">
                        <div class="mb-3 col-md-5">
                            <div class="row">
                                <div class="mb-3 col-md-6">
                                    <input class="form-control"
                                           type="text"
                                           id="usrgrpName"
                                           name="usrgrpName"
                                           value="Maker"
                                           readonly
                                           style="text-align:center" />
                                </div>
                                <div class="mb-3 col-md-3">
                                    <input class="form-control"
                                           type="text"
                                           id="usrgrpStat"
                                           name="usrgrpStat"
                                           value="[Status]"
                                           readonly
                                           style="text-align:center" />
                                </div>
                                <div class="mb-3 col-md-3">
                                    <input class="form-control"
                                           type="text"
                                           id="modeflag"
                                           name="modeflag"
                                           value="Edit"
                                           style="text-align:center"
                                           readonly />
                                </div>
                            </div>
                        </div>
                        <div class="mb-3 col-md-4">
                        </div>
                        <div class="mb-3 col-md-3">
                            <div class="icons"><a href="~/UserGroupsMapping/UserGroupsMapping"><img src="../Assets/images/toplist.png" data-bs-toggle="tooltip" data-bs-placement="bottom" title="List"></a>&nbsp;&nbsp;&nbsp;&nbsp;<img style="cursor:pointer;" src="../Assets/images/topsave.png" data-bs-toggle="modal" data-bs-target="#attach" data-bs-toggle="tooltip" data-bs-placement="bottom" title="Save" id="saverole" onclick="save_rollmap()"></div>
                        </div>
                    </div>
                    <div class="row" style="margin-top:10px;">
                        <div class="col-sm-12">
                            <div id="Maingrid" class="col-md-9" style="margin:auto;top:10px;width:100%;">

                            </div>
                        </div>
                    </div>

                </form>
            </div>
        </div>
    </div>


</body>
</html>

<script>
    function CreateUserGroups(usergroup_id) {
        debugger;
        if ($("#hdn_ugrp_gid").val() == "") {
            $("#hdn_ugrp_gid").val(0);
        }
        var ugrp_id = $("#hdn_ugrp_gid").val();
        var usergrp = $("#txtusergroup").val();
        var menuchecked = sessionStorage.getItem("checkedmenu");
        var menunotchecked = sessionStorage.getItem("notcheckedmenu");
        debugger;
        $.ajax({
            type: "POST",
            //cache: false,
            contentType: "application/json; charset=utf-8",
            async: false,
            //dataType: "json",
            url: '@Url.Action("CreateUserGroups", "UserGroupsMapping")',
            data: "{ usergroup_gid:'" + ugrp_id + "',usergroup_name:'" + usergrp + "',menuchecked:'" + menuchecked + "',menunotchecked:'" + menunotchecked + "'}",
            success: function (data) {
                var message = data.msg;
                var resultnew = data.result;
                $(".errormessage").html('<span class="errormessage" id="mess">' + message + '</span>');
                setTimeout(function () {
                    window.location.reload(1);
                }, 1500);
                return false;
            },
            error: function (data) {
                //alert("failed to load");
                //var message = data.msg;
                //var resultnew = data.result;
                //$(".errormessage").html('<span class="errormessage" id="mess">' + message + '</span>');
            }
        });
        $("#btn_submit").show();
        $("#btn_update").hide();
        $("#title").text("Create New User Groups");
    }

    $(document).ready(function () {
        $(".treeview li>ul").css('display', 'none');
        $(".collapsible1").click(function (e) {
            e.preventDefault();
            $(this).toggleClass("collapse1 expand1");
            $(this).closest('li').children('ul').slideToggle();
        });
        $(function () {
            $("#datepicker, #datepicker1").datepicker({
                autoclose: true,
                todayHighlight: true,
            }).datepicker('update', new Date());
        });
       
    });
    function onDataBound() {
        var grid = $("#usergrp_list").data("kendoGrid");
        grid.autoFitColumn(1);
        grid.autoFitColumn(2);
    }
</script>

<script type="text/javascript">
    var checkedIds = {};
    $(document).off('click', '#usergrp_list tbody tr .ob-edit').on("click", "#usergrp_list tbody tr .ob-edit", function (e) {
        debugger;
        var item = $("#usergrp_list").data("kendoGrid").dataItem($(this).closest("tr"));
        var usergroup_gid = item.usergroup_gid;
        var usergroup_name = item.usergroup_name;
        $("#btn_submit").hide();
        $("#btn_update").show();
        $("#title").text("Update User Group");
        $("#hdn_ugrp_gid").val(usergroup_gid);
        $("#hdn_grpname").val(usergroup_name);
        Edit(usergroup_gid);
    });

    $(document).on("click", "#usergrp_list tbody tr .ob-view", function (e) {
        debugger;
        e.preventDefault();
        var item = $("#usergrp_list").data("kendoGrid").dataItem($(this).closest("tr"));
        var usergroup_gid = item.usergroup_gid;
        var usergroup_name = item.usergroup_name;
        $("#btn_submit").hide();
        $("#btn_update").show();
        $("#title").text("Update User Group");
        $("#hdn_ugrp_gid").val(usergroup_gid);
        $("#hdn_grpname").val(usergroup_name);
        $("#txtusergroup").prop("disabled", true);
        View(usergroup_gid);
        var disableprop = null;
        sessionStorage.setItem("disable", disableprop);
    });
    //function Download() {
    //    var item = $("#usergrp_list").data("kendoGrid").dataItem($(event.target).closest("tr"));
    //    var usergroup_gid = item.usergroup_gid;
    //    var usergroup_name = item.usergroup_name;
    //    $("#btn_submit").hide();
    //    $("#btn_update").show();
    //    $("#title").text("Update User Group");
    //    $("#hdn_ugrp_gid").val(usergroup_gid);
    //    $("#hdn_grpname").val(usergroup_name);
    //    $("#txtusergroup").prop("disabled", true);
    //    View(usergroup_gid);
    //    $('#btnview').prop('disabled', false);
    //    var disableprop = null;
    //    sessionStorage.setItem("disable", disableprop);
    //}

    $(document).off('click', '#usergrp_list tbody tr .ob-delete').on("click", "#usergrp_list tbody tr .ob-delete", function (e) {
        debugger;
        var item = $("#usergrp_list").data("kendoGrid").dataItem($(this).closest("tr"));
        var usergroup_gid = item.usergroup_gid;

        $.ajax({
            type: "POST",
            contentType: "application/json; charset=utf-8",
            async: false,
            url: '@Url.Action("DeleteUserGroups", "UserGroupsMapping")',
            data: "{ usergroup_gid:'" + usergroup_gid + "'}",
            success: function (data) {
                debugger;
                var message = data;
                $.dialog({
                    title: 'DMS',
                    content: message,
                    icon: 'fa fa-success',
                    type: 'blue',
                })
                //$(".messagedisplay").html('<span class="errormessage" id="mess">' + message + '</span>');
                setTimeout(function () {
                    window.location.reload(1);
                }, 1500);
                return false;
            },
        });
    });

    var modal;
    $(document).ready(function () {
        debugger;
        $("#navhead").text("Roles");
        loadgrid_();
        if ("@ViewBag.mode_flag" == "V") {
            $("#saverole").attr('hidden', true);
        }
        modal = $("[id$='user-modal']");
        //modal.dialog({
        //    autoOpen: false,
        //    modal: true,
        //    duration: 300,
        //});
    });
    function Add() {
        debugger;
        modal.load('../UserGroupsMapping/TreeViewPartial?usergroup_gid=0');
        //window.location = "../UserGroupsMapping/TreeViewPartial?usergroup_gid=0";
        $("#hdn_title").val("Create New UserGroups");
        modal.show();
        return false;
    }
    function Edit(usergroup_gid) {
        modal.load('../UserGroupsMapping/TreeViewPartial?usergroup_gid=' + usergroup_gid);
        $("#hdn_title").val("Update UserGroups");
        modal.show();
        modal.dialog("open");
        return false;
    }
    function View(usergroup_gid) {
        modal.load('../UserGroupsMapping/TreeViewPartial?usergroup_gid=' + usergroup_gid);
        $("#hdn_title").val("View UserGroups");
        modal.show();
        $("#btn_submit").show();
        return false;
    }
    function Close() {
        debugger;
        modal.hide();
        $("#btn_submit").hide();
        $("#btn_update").hide();
        $("#title").text("Create New User Group");
        $("#txtusergroup").prop("disabled", false);
        //var item = $("#usergrp_list").data("kendoGrid")
        setTimeout(function () {
            window.location.reload(0);
        }, 0);
    }

    function loadgrid_() {
        debugger;
        var usergid = "@ViewBag.usergrp_gid";
        $.ajax({
            url: '@Url.Action("RoleMappingData_", "UserGroupsMapping")',
           // type: "Post",
            dataType: "json",
            //contentType: "application/json; charset=utf-8",
            data: { 'user_gid': usergid },
            success: function (result) {
                debugger
                var columns = [];
                var chkval = JSON.parse(result.Data1);
                // var coldatatype = JSON.parse(result.Data2);
                var arr = [];
                $.each(chkval, function (i, e) {
                    $.each(e, function (key, val) {
                        arr.push(val);
                    });

                });

                if (arr == "No Records Found!" || arr == "Error in Data!") {
                    $.alert({
                        title: ' ',
                        content: 'No Records found..!',
                        type: 'blue',
                    });
                    //$('#btnbulmail').prop('disabled', true);
                    return false;
                }


                var data = JSON.parse(result.Data1);
                $("#usrgrpName").val(data[0].usergrp_name);
                $("#usrgrpStat").val(data[0].usergrp_stat);
                //    var data2 = JSON.parse(result.Data2);
                var i = 0;

                var entryIndex = "entries[" + i + "]";
                //columns.push({
                //    title: "Select",
                //    template: '<input type="checkbox"  class="checkbox" name="attributecheckbox" id="attributecheckbox" value="" class="checkbox" ></span>',
                //    width: '70px'

                //});
                var m = 0;
                var disabledflag = "";
                if ("@ViewBag.mode_flag" == "V") {
                    disabledflag = "disabled";
                }
                for (var key in data[0]) {
                    debugger;
                    // var val = data2[0][key];
                    // var lock = false;
                    try {

                        if (key == "Add" || key == "Modify" || key == "View" || key == "Auth" || key == "Print" || key == "In-Act" || key == "Deny") {
                            columns.push({
                                field: entryIndex,
                                title: key,
                                template: '<input type="checkbox"  class="form-check-input ' + key + '" name="checkbox" id="attributecheckbox_' + key + '" value="1"  onchange = "selectRowchild(this,' + m + ')"  ' + disabledflag + '/> ',
                                type: "boolean",
                                width: "80px",
                                filterable: false,
                                // lockable: false
                            });
                        }
                        else if (key == "usergrp_name" || key == "usergrp_stat") {
                            columns.push({
                                field: entryIndex,
                                title: key,
                                type: 'string',
                                hidden: true
                                // lockable: false
                            });
                        }
                        else if (key == "rolemenu_rowid" || key == "menu_gid") {
                            columns.push({
                                field: entryIndex,
                                title: key,
                                type: 'number',
                                hidden:true
                                // lockable: false
                            });
                        }

                        else {
                            columns.push({
                                field: entryIndex,
                                title: key,
                                //width: "150px",
                                type: 'string',
                                // lockable: false
                            });
                        }
                    }
                    catch (e) {
                        columns.push({
                            field: entryIndex,
                            title: key,
                            width:"150px",
                            type: 'string'
                        });
                    }

                    i = i + 1;
                    m = m + 1;
                    entryIndex = "entries[" + i + "]";
                }
                //columns.push({
                //    //field: entryIndex + 1,
                //    title: 'Action',
                //    //template: '<span class="fa fa-eye view" name="view" id="view" value="view" onclick=View("main") style ="color:black;cursor:pointer"></span>',
                //    template: '<img style="cursor:pointer;" src="/Assets/images/editicons.png" onclick="edit_()"> <img style="cursor:pointer;margin-left:10px" src="/fintantra/images/viewicons.png" onclick="edit_()">',
                //    editable: true,
                //    width: '150px'
                //});


                var rows = [];
                var data1 = JSON.parse(result.Data1);;
                $.each(data1, function (i, e) {
                    var entryArray = [];
                    $.each(e, function (key, val) {
                        // var v_datatype = data2[0][key];
                        entryArray.push(val);
                    });
                    rows.push(kendo.observable({

                        entries: entryArray
                    }));
                    //console.log(entryArray);
                });

                var viewModel = kendo.observable({
                    gridRows: rows
                });

                var configuration = {
                    dataBound: onDataBound,
                    editable: false,
                    sortable: true,
                    scrollable: false,
                    //  height:"100%",
                    filterable: true,
                    pagable: false,
                    resizable: true,
                    //  persistSelection: true,
                    selectable: "false",
                    //pageable: {
                    //    pageSize: 8,
                    //    buttonCount: 4,
                    //    pageSizes: [10, 20, 30, 40, 50]
                    //},
                    columns: columns,
                   
                    rows: viewModel
                };

                $("#example").remove();
                //   $('#Maingrid').append('<div class="col-sm-1" style="margin-top: -37px;margin-left: 120px;position:relative;top:39px;z-index:1;"><button type="button" id="btnbulmail" onclick="return forbulkMail()" style="width:140px" class="btn btn-orange"><i class="fa fa-envelope-o"></i> Mail</button></div>');
                $('#Maingrid').append('<div id="example" class="table-responsive text-nowrap" id="chk1"><table id="grid" data-bind="source: gridRows" class="table table-sm" style="width:100%;height:auto;line-height:1em;font-size:12px;"></table></div>');
                var timeEditGrid = $("#grid").kendoGrid(configuration).data("kendoGrid");

                kendo.bind($("#grid"), viewModel);

                var grid = $("#grid").data("kendoGrid");
                //grid.hideColumn(2);
                //grid.hideColumn(3);
                //grid.hideColumn(4);
                //grid.hideColumn(5);
                //grid.hideColumn(6);
                //grid.hideColumn(7);
                $('#btnbulmail').prop('disabled', false);
                //bind click event to the checkbox
                 //grid.table.on("click", ".checkbox", selectRow);
            },
            error: function (result) {
                $.alert({
                    title: ' ',
                    content: "Failed to fetch.!",
                    type: 'red',
                });
            }
        });
    }
    function selectRowchild(tog_,sel_) {
        debugger
        var grid1 = $("#grid").data("kendoGrid");
        var checked = tog_.checked,
        row = $(tog_).closest("tr"),//$("input:checked", grid1.tbody).closest("tr");//$(this).closest("tr"),
        gridss = $("#grid").data("kendoGrid"),
        dataItem = gridss.dataItem(row);
        
        //checkedIds[dataItem.entries[0]] = checked;
        if (checked) {
            //-select the row
            //row.addClass("k-state-selected");
            // row.addClass("k-gridtest");
            dataItem.entries[sel_] = "1";
        }
        else {
            //-remove selection
            //row.removeClass("k-state-selected");
            //row.removeClass("k-gridtest");
            dataItem.entries[sel_] = "0";
        }
    }
    function onDataBound(e) {
        debugger
        var checked = [];
        for (var i in checkedIds) {
            if (checkedIds[i]) {
                checked.push(i);
                //row.addClass("k-state-selected");
            }
        }
        debugger
        var view = this.dataSource.view();
        for (var i = 0; i < view.length; i++) {
            if (view[i].entries[4] == "1") {
                this.tbody.find("tr[data-uid='" + view[i].uid + "']").find(".form-check-input.Add")
                .attr("checked", "checked");
                //this.tbody.find("tr[data-uid='" + view[i].uid + "']").find(".form-check-input.Add")
                //.val("1");
            }
            if (view[i].entries[5] == "1") {
                this.tbody.find("tr[data-uid='" + view[i].uid + "']").find(".form-check-input.Modify")
                .attr("checked", "checked");
            }
            if (view[i].entries[6] == "1") {
                this.tbody.find("tr[data-uid='" + view[i].uid + "']").find(".form-check-input.View")
                .attr("checked", "checked");
            }
            if (view[i].entries[7] == "1") {
                this.tbody.find("tr[data-uid='" + view[i].uid + "']").find(".form-check-input.Auth")
                .attr("checked", "checked");
            }
            if (view[i].entries[8] == "1") {
                this.tbody.find("tr[data-uid='" + view[i].uid + "']").find(".form-check-input.In-Act")
                .attr("checked", "checked");
            }
            if (view[i].entries[9] == "1") {
                this.tbody.find("tr[data-uid='" + view[i].uid + "']").find(".form-check-input.Print")
                .attr("checked", "checked");
            }
            if (view[i].entries[10] == "1") {
                this.tbody.find("tr[data-uid='" + view[i].uid + "']").find(".form-check-input.Deny")
                .attr("checked", "checked");
            }
        }


    }
    function save_rollmap() {
        debugger;
        var modelobj = {};
        var modelArr = [];
        var displayedData = $("#grid").data().kendoGrid.dataSource.view();
        
        for (var i = 0; i < displayedData.length; i++) {
            modelobj = {
                rolemenu_rowid: displayedData[i].entries[0],
                menu_gid: displayedData[i].entries[1],
                menu_name: displayedData[i].entries[2],
             //   add_perm: displayedData[i].entries[3],
                add_perm: displayedData[i].entries[4],
                mod_perm: displayedData[i].entries[5],
                view_perm: displayedData[i].entries[6],
                auth_perm: displayedData[i].entries[7],
                inactivate_perm: displayedData[i].entries[9],
                print_perm: displayedData[i].entries[8],
                deny_flag: displayedData[i].entries[10],
                role_code: "@ViewBag.usergrp_gid"

            }
            modelArr.push(modelobj);
        }
        var displayedDataAsJSON = JSON.stringify(modelArr);
        //alert(displayedDataAsJSON);
        $.ajax({
            url: '@Url.Action("SaveUserRoleMap", "UserGroupsMapping")',
            type: "post",
            //data: { "jsondata_": JSON.stringify(jsondata_1) },
            data: displayedDataAsJSON,
            contentType: "application/json",
           // dataType: "json",
            success: function (result) {
                debugger;
                //alert(result);
                if (result == 1 || result == "1") {
                    $.alert({
                        title: 'DMS',
                        content: 'Role Mapping Updated Successfully.!',
                        type: 'green',
                    });
                    setTimeout(function () {
                        debugger;
                        window.location.reload(1);
                    }, 2500);
                } else {
                    $.alert({
                        title: 'DMS',
                        content: 'Role Mapping Updated Successfully.!',
                        type: 'green',
                    });
                    setTimeout(function () {
                        debugger;
                        window.location.reload(1);
                    }, 2500);
                }
            },
            error: function (er) {
                $.alert({
                    title: 'DMS',
                    content: 'Role Mapping Failed.!',
                    type: 'green',
                });
            }
        });
    }
    function getcheckedval(sel, id_) {
        var grid1 = $("#grid").data("kendoGrid");
        var row = grid1.table.find("tr[data-uid='" + sel + "']");
        var chkDocPackComplete = $(row).closest("td").find("id='" + id_ + "'");
        var th = $(chkDocPackComplete).is("input:checked");
       // alert();
        //var oi = grid1.tbody.find("tr[data-uid='" + sel + "']").find(".form-check-input.inactivate_perm:checked").val();
       // alert(oi);
    }
</script>

