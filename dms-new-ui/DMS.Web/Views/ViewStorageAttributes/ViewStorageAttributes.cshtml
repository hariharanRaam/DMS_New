@using Kendo.Mvc.UI;
@using Kendo.Mvc.UI.Fluent;
@using Kendo.Mvc.Extensions;
<!DOCTYPE html>
<html>
<head>
    <title></title>
    <style>
        ul {
            display: block;
        }

        .k-content {
            font-weight: normal;
            font-size: 13px;
        }

        .k-state-selected {
            background-color: #337ab7;
        }
    </style>
    <link rel="stylesheet" href="//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css">
    <meta name="viewport" content="width=device-width" />

</head>
<body class="hold-transition skin-blue sidebar-mini fixed" id="viewdoc">
    <!-- Content Wrapper. Contains page content -->
    <div class="content-wrapper">
        <!-- Main content -->
        <section class="content">
            <!-- Small boxes (Stat box) -->
            <div class="row">
                <div class="col-md-12">
                    <div class="box box-orange">
                        <div class="box-header text-center with-border">
                            <h3 class="box-title">Storage Hierarchy</h3>
                        </div>

                        <div>
                            <table>
                                <tr>
                                    <td>
                                        <button type="submit" onclick="btnadd()" class="btn btn-danger pull-left"><span class="fa fa-plus-circle"></span> Add New</button>
                                    </td>

                                </tr>
                            </table>
                        </div>

                        <!-- /.box-header -->
                        <!-- form start -->
                        <form method="get" class="form-horizontal" enctype="multipart/form-data" id="form">
                            <input type="hidden" id="hdn_ugrp_gid" />
                            <div id="example" class="k-content">
                                <table id="grid" data-bind="source: gridRows"></table>
                            </div>
                            @*<div id="user-modal" style="margin-left:30px;"></div>*@
                            <div id="ForPartialView"></div>
                            <div id="ForPartialViewEdit"> </div>

                        </form>
                    </div>
                </div>
            </div>

        </section>
        <!-- /.content -->
    </div>
</body>
</html>

<script>
    var record = 0;
    var orglevelcode1 = "";
    var orglevelcode2 = "";
    var orglevelcode3 = "";
    var orglevelcode4 = "";
    var objDialog;
    var objDialog1;
    $(document).ready(function () {
        debugger;
        loaddynamiccolumns();
        objDialog = $("[id$='ForPartialView']");
        objDialog.dialog({
            autoOpen: false,
            modal: true,
            width: 600,
            height: 350
        });

        objDialog1 = $("[id$='ForPartialViewEdit']");
        objDialog1.dialog({
            autoOpen: false,
            modal: true,
            width: 970,
            height: 600
        });


        $.ajax({
            url: '@Url.Action("GetDynamicStorageAttributes", "ViewStorageAttributes")',
            success: function (result) {

                var columns = [];
                var data = JSON.parse(result.Data1);
                var data2 = JSON.parse(result.Data2);
                if (data.length == 0) {
                    $.alert({
                        title: 'DMS',
                        content: 'No records found!',
                        type: 'blue',
                    });
                    return false;
                }
                var i = 0;
                var entryIndex = "entries[" + i + "]";
                columns.push({
                    title: "Sl No",
                    template: "#= ++record #"

                });
                for (var key in data[0]) {
                    var val = data2[0][key];

                    columns.push({
                        field: entryIndex,
                        title: key,
                        type: val,
                        //width: 20
                    });
                    i = i + 1;
                    entryIndex = "entries[" + i + "]";
                }

                columns.push({
                    field: entryIndex + 1,
                    title: 'View',
                    template: '<span class="btn btn-orange fa fa-eye View" name="View" id="View" value="View" onclick="view()" ></span>',
                    filterable: false,
                    sortable: true,
                    editable: false,
                    width: '2%'
                });

                //
                columns.push({
                    field: entryIndex + 1,
                    title: 'Edit',
                    template: '<span class="btn btn-orange fa fa-edit Edit" name="Edit" id="Edit" onclick="viewedit()" value="Edit"></span>',
                    filterable: false,
                    sortable: true,
                    editable: false,
                    width: '2%'
                });
                //


                var rows = [];
                var data1 = JSON.parse(result.Data1);

                $.each(data1, function (i, e) {
                    var entryArray = [];
                    $.each(e, function (key, val) {
                        entryArray.push(val);
                    });
                    rows.push(kendo.observable({
                        entries: entryArray
                    }));
                });

                var viewModel = kendo.observable({
                    gridRows: rows
                });
                var configuration = {
                    editable: false,
                    sortable: true,
                    scrollable: false,
                    filterable: true,
                    pagable: false,
                    resizable: true,
                    pageable: {
                        pageSize: 10,
                        buttonCount: 4,
                        pageSizes: [10, 20, 30, 40, 50]
                    },
                    columns: columns,
                    rows: viewModel,
                    dataBinding: function () {
                        record = (this.dataSource.page() - 1) * this.dataSource.pageSize();
                    },
                    height: '100%'
                };

                var timeEditGrid = $("#grid").kendoGrid(configuration).data("kendoGrid");
                kendo.bind($("#grid"), viewModel);

                var grid = $("#grid").data("kendoGrid");

                if (orglevelcode4 != "" && orglevelcode4 != null && orglevelcode4 != "undefined") {
                    grid.hideColumn(7);
                    grid.hideColumn(8);
                    grid.hideColumn(9);
                    grid.hideColumn(10);
                    grid.hideColumn(11);
                    grid.hideColumn(12);
                    grid.hideColumn(13);
                    grid.hideColumn(14);
                    grid.hideColumn(15);
                    grid.hideColumn(16);
                   // grid.hideColumn(17);
                } else if (orglevelcode3 != "" && orglevelcode3 != null && orglevelcode3 != "undefined") {
                    grid.hideColumn(4);
                    grid.hideColumn(7);
                    grid.hideColumn(8);
                    grid.hideColumn(9);
                    grid.hideColumn(10);
                    grid.hideColumn(11);
                    grid.hideColumn(12);
                    grid.hideColumn(13);
                    grid.hideColumn(14);
                    grid.hideColumn(15);
                    grid.hideColumn(16);
                  //  grid.hideColumn(17);
                } else if (orglevelcode2 != "" && orglevelcode2 != null && orglevelcode2 != "undefined") {
                    grid.hideColumn(3);
                    grid.hideColumn(4);
                    grid.hideColumn(7);
                    grid.hideColumn(8);
                    grid.hideColumn(9);
                    grid.hideColumn(10);
                    grid.hideColumn(11);
                    grid.hideColumn(12);
                    grid.hideColumn(13);
                    grid.hideColumn(14);
                    grid.hideColumn(15);
                    grid.hideColumn(16);
                  //  grid.hideColumn(17);
                } else if (orglevelcode1 != "" && orglevelcode1 != null && orglevelcode1 != "undefined") {
                    grid.hideColumn(2);
                    grid.hideColumn(3);
                    grid.hideColumn(4);
                    grid.hideColumn(7);
                    grid.hideColumn(8);
                    grid.hideColumn(9);
                    grid.hideColumn(10);
                    grid.hideColumn(11);
                    grid.hideColumn(12);
                    grid.hideColumn(13);
                    grid.hideColumn(14);
                    grid.hideColumn(15);
                    grid.hideColumn(16);
                  //  grid.hideColumn(17);
                }

                for (var i = 0; i < grid.columns.length; i++) {
                    if (i != grid.columns.length) {
                        grid.autoFitColumn(i);  //autofit each column.

                    }
                }
            },
            error: function () {
                $.alert({
                    title: 'DMS',
                    content: 'Some error has occurred..!',
                    type: 'red',
                });
            }

        });
    });
    function loaddynamiccolumns() {
        try {
            $.ajax({
                type: "POST",
                contentType: "application/json; charset=utf-8",
                async: false,
                url: '@Url.Action("getlabellist", "DocGroupMaster")',
                data: "{}",
                success: function (data) {
                    debugger;
                    // var orglevelcode1 = data[0].orghierarchy_code;
                    if (data.length >= 1) {
                        orglevelcode1 = data[0].orghierarchy_code;
                        // orglevelval1 = $("#" + orglevelcode1).val();
                    }
                    if (data.length >= 2) {
                        orglevelcode2 = data[1].orghierarchy_code;
                        // orglevelval2 = $("#" + orglevelcode2).val();
                    }
                    if (data.length >= 3) {
                        orglevelcode3 = data[2].orghierarchy_code;
                        //orglevelval3 = $("#" + orglevelcode3).val();
                    }
                    if (data.length == 4) {
                        orglevelcode4 = data[3].orghierarchy_code;
                        //orglevelval4 = $("#" + orglevelcode4).val();
                    }


                    // alert(orglevelcode1);
                    //setTimeout(function () {
                    //    window.location.reload(1);
                    //}, 2500);
                },
            });
        } catch (er) {
            alert(er);
        }
    }
    function onChangeunit(parent_code) {
        debugger;
        try {
            var mastercode = this.value();
            var master = ""
            if (mastercode == "" || mastercode == null || mastercode == "undefined" || mastercode == 0) {
                return false;
            }
            else {
                $.getJSON("DocGroupNames/DocGroupMaster?parentcode=" + master + "&dependcode=" + mastercode, function (data) {
                    debugger;
                    var dept = data;


                    //$("#Dept_Id").data("kendoDropDownList").dataSource.data(data[1]);
                    if (dept.length > 1) {
                        var ee = data[1].parent_code;
                        //$("#" + ee).data("kendoDropDownList").dataSource.data(data);
                        $("#" + ee).data("kendoDropDownList").value(data[1].master_code);
                        //$("#" + ee).data("kendoDropDownList").select(1)
                        $("#" + ee).data("kendoDropDownList").trigger("change");
                        //$("#Dept_Id").data("kendoDropDownList").refresh();
                    }
                    else {
                        var ee = data[0].parent_code;
                        //  $("#" + ee).data("kendoDropDownList").select(0)
                    }

                });
            }
        } catch (er) {
            hideProgress();
        }
    }
    function view() {
        debugger;
        var grid = $("#grid").data("kendoGrid");
        var data = grid.dataItem($(event.target).closest("tr"));
        var id = (data.entries[10]);
        var group_gid = (data.entries[10]);
        $("#hdn_ugrp_gid").val(group_gid);
        objDialog.load('../ViewStorageAttributes/PartialView');
        objDialog.dialog({ title: 'View' });
        objDialog.dialog("open");
        return false;
    }


    //30-03-2019

    function viewedit() {
        debugger;
        var grid = $("#grid").data("kendoGrid");
        var data = grid.dataItem($(event.target).closest("tr"));
        var id = (data.entries[10]);
        var group_gid = (data.entries[10]);
        $("#hdn_ugrp_gid").val(group_gid);
        objDialog1.load('../ViewStorageAttributes/PartialViewEdit');
        objDialog1.dialog({ title: 'Edit' });
        objDialog1.dialog("open");
        return false;
    }
    function Close() {
        debugger;
        objDialog.dialog("close");
    }

</script>

<script>
    function btnadd() {
        debugger;
        var url = '@Url.Action("StorageAttributes", "StorageAttributes")'
        window.location.href = url;
    }
</script>