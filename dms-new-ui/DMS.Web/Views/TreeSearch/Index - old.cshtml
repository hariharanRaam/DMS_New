@*@model DynamicTreeView.Models.AddNode*@
@model DMS.Model.TreeSearch_Model
<!-- Content Wrapper. Contains page content -->
<div class="content-wrapper">
    <!-- Main content -->
    <section class="content">
        <!-- Small boxes (Stat box) -->
        <div class="row">
            <div class="col-md-3" style="margin:auto;max-height:650px;max-width:300px;">
                <div class="col-md-3" style="width:100%;overflow-x:auto;height:560px;">
                    <div class=" panel panel-primary">
                        <div class="panel-heading">DMS Search</div>
                        <div class="panel-body" style="width:100%;max-height:100%">
                            <div id="Usertree" style="width:auto"></div>
                            <div class="clearfix">
                            </div>
                            <br />
                            <div>
                                @*<button id="btnGetValue" class="btn btn-warning">Search</button>
                                    <button id="btnGetdata" class="btn btn-warning" onclick="GetGridData()">Grid Data</button>*@
                            </div>
                        </div>
                    </div>
                </div>

            </div>

            @*<div class="panel panel-default" id="AttributeDataPartial">
                    @Html.Partial("AttributeDataPartial")
                </div>*@

            <div class="col-md-9" style="top:10px">
                @*<td>
                        <button class="btn btn-orange">Refresh</button>
                    </td>
                    <td width="100px"></td>
                    <td>
                        <button class="btn btn-orange">Export</button>
                    </td>*@
                <div>
                    <table>
                        <tr>
                            <td>
                                <button id="btnGetValue" class="btn btn-orange">Search</button>
                            </td>

                            <td>
                                <button id="btnGetdata" class="btn btn-orange" disabled onclick="GetGridData()">Grid Data</button>
                            </td>
                            <td>
                                <button type="button" id="btnbulmail" disabled onclick="return forbulkMail()" class="btn btn-orange"><i class="glyphicon glyphicon-envelope"></i> Mail</button>
                            </td>
                            <td>
                                <button class="btn btn-orange" onclick="return ClearData()">Clear</button>
                            </td>
                        </tr>
                        <tr style="height:10px;"></tr>
                    </table>
                </div>
            </div>
            <div class="col-md-9" style="margin:auto;max-height:620px;max-width: 100%;padding-left: -10px;">
                <div class="col-md-9" style="width:102%;padding-left: 2px;padding-top: -11px;">
                    <div class=" panel panel-primary" style="margin-bottom:5px;">
                        <div class="panel-heading">Atribute Search</div>
                        <div class="panel-body" style="padding-right:50px;width:100%;max-height:100%">
                            <div class="col-md-9" style="margin:auto;height:110px;overflow:auto;width:104%;">
                                <div id="AttributeDataPartial" style="border-top:groove thin;border-top-style:ridge;border-bottom:groove thin;border-bottom-style:ridge;"> </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-9" style="max-height:620px;max-width:100%;overflow-x:auto;padding-left: -10px;padding-left: -15px;">
                    <div class="col-md-9" style="width:100%;padding-left: 2px;padding-top: -11px;">
                        <div class=" panel panel-primary" style="height:360px;">
                            <div class="panel-heading">Grid View</div>
                            <div class="panel-body" style="padding-right:50px;width:100%;max-height:100%">
                                <div class="col-md-9" style="margin:auto;overflow:auto;width:104%;">
                                    <div id="Maingrid" class="col-md-9" style="margin:auto;height:300px;top:10px;width:100%;"> </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row" id="ForTreeSearchpartialView"></div>
        <div class="row" id="ForPartialView"></div>
        <div class="row" id="ForAttributeDetailsPartialView"></div>
        <input type="hidden" id="hdn_mailtype" />
        <input type="hidden" id="hdn_filegid" />
        <input type="hidden" id="hdn_type" />
        <input type="hidden" id="hdn_gridgid" />
        <input type="hidden" id="hdn_attachid" />
        <input type="hidden" id="hdn_mode" />
        <input type="hidden" id="hdn_attachid" />
        <input type="hidden" id="hdn_linkorinterfile" />
        <input type="hidden" id="hdn_filelocation" />
    </section>
    <!-- /.content -->
</div>

<script src="@Url.Content("~/Scripts/conditional-validation.js")" type="text/javascript"></script>
<script src="~/Scripts/Gijgo/gijgo.js"></script>
<link href="http://code.gijgo.com/1.3.0/css/gijgo.css" rel="stylesheet" type="text/css" />
<script type="text/javascript">
    //'Hierarchy/GetHierarchy'
    var objDialog;
    var objDialog5;

    $(document).ready(function () {

        objDialog = $("[id$='ForPartialView']");
        objDialog.dialog({
            autoOpen: false,
            modal: true,
            width: 550,
            height: 550
        });

        objDialog5 = $("[id$='ForAttributeDetailsPartialView']");
        objDialog5.dialog({
            autoOpen: false,
            modal: true,
            width: 1250,
            height: 700
        });

        var Usertree = "";
        var tree = "";
        $.ajax({
            type: 'get',
            dataType: 'json',
            cache: false,
            url: '/TreeSearch/GetHierarchy',
            success: function (records, textStatus, jqXHR) {
                tree = $('#tree').tree({
                    primaryKey: 'Id',
                    dataSource: records,
                    dragAndDrop: true,
                    checkboxes: true,
                    iconsLibrary: 'glyphicons',
                    //uiLibrary: 'bootstrap'
                });
                Usertree = $('#Usertree').tree({
                    primaryKey: 'Id',
                    dataSource: records,
                    dragAndDrop: false,
                    checkboxes: true,
                    iconsLibrary: 'glyphicons',
                    //uiLibrary: 'bootstrap'
                });
                debugger;

                //tree.on('nodeDrop', function (e, Id, PerentId) {
                //    currentNode = Id ? tree.getDataById(Id) : {};
                //    console.log("current Node = " + currentNode);
                //    parentNode = PerentId ? tree.getDataById(PerentId) : {};
                //    console.log("parent Node = " + parentNode);

                //    if (currentNode.perentId === null && parentNode.perentId === null) {
                //        alert("Parent node is not droppable..!!");
                //        return false;
                //    }
                //    // console.log(parent.HierarchyLevel);
                //    var params = { id: Id, parentId: PerentId };
                //    $.ajax({
                //        type: "POST",
                //        url: "/Hierarchy/ChangeNodePosition",
                //        data: params,
                //        dataType: "json",
                //        success: function (data) {
                //            $.ajax({
                //                type: "Get",
                //                url: "/TreeSearch/GetHierarchy",
                //                dataType: "json",
                //                success: function (records) {
                //                    Usertree.destroy();
                //                    Usertree = $('#Usertree').tree({
                //                        primaryKey: 'Id',
                //                        dataSource: records,
                //                        dragAndDrop: false,
                //                        checkboxes: true,
                //                        iconsLibrary: 'glyphicons',
                //                        //uiLibrary: 'bootstrap'
                //                    });
                //                }
                //            });

                //        }
                //    });

                //});

                $('#btnGetValue').click(function (e) {
                    debugger;
                    var result = Usertree.getCheckedNodes();
                    if (result == "") { alert("Please Select Any One DocGroup..!!") }
                    else {
                        //alert("Selected Node id is= " + result.join());
                        var data = result.join();
                        @*$.ajax({
                            type: "Post",

                            dataType: "html",
                            url: '@Url.Action("AttributeDataPartial", "TreeSearch")',
                           data: { data: data },
                           contentType: "application/json; charset=utf-8",
                           success: function (response) {
                               alert("TEST");
                               $("#AttributeDataPartial").html(response);
                            },

                           failure: function (response) {
                               alert("error");
                                   alert(response.responseText);
                               },
                           error: function (response) {
                               alert("error1");
                               $("#AttributeDataPartial").html(response);
                       }
                        });*@
                        $("#AttributeDataPartial").load("../TreeSearch/AttributeDataPartial",
                            { 'data': data });
                        $('#btnGetdata').prop('disabled', false);

                        //$('#divid').innerHTML = data;
                        // $.post
                    }
                });
                //delete node
                $('#btnDeleteNode').click(function (e) {
                    e.preventDefault();
                    var result = tree.getCheckedNodes();
                    if (result != "") {
                        $.ajax({
                            type: "POST",
                            url: "/TreeSearch/DeleteNode",
                            data: { values: result.toString() },
                            dataType: "json",
                            success: function (data) {
                                alert("Deleted successfully ");
                                window.location.reload();
                            },
                            error: function (jqXHR, textStatus, errorThrown) {
                                alert('Error - ' + errorThrown);
                            },
                        });
                    }
                    else {
                        alert("Please select Node to delete..!!");
                    }


                });
            },
            error: function (jqXHR, textStatus, errorThrown) {
                alert('Error - ' + errorThrown);
            }
        });

        // show model popup to add new node in Tree
        $('#btnpopoverAddNode').click(function (e) {
            e.preventDefault();
            $("#modalAddNode").modal("show");
        });

        //Save data from PopUp
        $(document).on("click", "#savenode", function (event) {
            event.preventDefault();
            $.validator.unobtrusive.parse($('#formaddNode'));
            $('#formaddNode').validate();
            if ($('#formaddNode').valid()) {
                var formdata = $('#formaddNode').serialize();
                // alert(formdata);
                $.ajax({
                    type: "POST",
                    url: "/TreeSearch/AddNewNode",
                    dataType: "json",
                    data: formdata,
                    success: function (response) {
                        // $("#modalAddNode").modal("hide");
                        window.location.reload();
                    },
                    error: function (response) {
                        alert('Exception found');
                        //  $("#modalAddNode").modal("hide");
                        window.location.reload();
                    },
                    complete: function () {
                        //  $('.ajax-loader').css("visibility", "hidden");
                    }
                });
            }

        });

        //Close PopUp
        $(document).on("click", "#closePopup", function (e) {
            e.preventDefault();
            $("#modalAddNode").modal("hide");
        });

        $('.rbtnnodetype').click(function (e) {
            if ($(this).val() == "Pn") {
                $('.petenddiv').attr("class", "petenddiv hidden");

                $("#ParentName").val("");
            }
            else {
                $('.petenddiv').attr("class", "petenddiv");
            }
        });

    });
    var checkedIds = {};
    function GetGridData() {
        debugger
        //Framing where clause condition.
        var count = $('#ctlcount').val();
        var concatval;
        //creating array variable.
        var Dyntextvalues = [];
        var Attributetypess = [];
        var atrname = [];
        var Docgroupid = [];
        var Docnameid = [];
        var Attributename = [];
        var Conditions = [];
        var operators = [];
        var arr = [];
        var z = 0;
        for (var i = 0; i < count; i++) {
            Attributetypess.push($('#Attribtype' + i).val());
            atrname.push($('#Attribname' + i).val());
            Docgroupid.push($('#Docgroupid' + i).val());
            Docnameid.push($('#Docnameid' + i).val());
            Conditions.push($('#cont' + i).val());
            operators.push($('#ope' + i).val());
            //  for (var j = 0; j <= count; j++) {
            var Attributename = $.trim(atrname);
            var cont = $('#cont' + i).val();
            //  for (var z = 0; z <= arr.length; z++) {

            /*  if (i == 0) {
                  arr.push(Docgroupid[i]);
                  var gettxtdesval = $('#ctl' + i).val();
                  if ($('#cont' + i).val() == "Contains" && $('#ope' + i).val() == "and") {
                      concatval = "and d.Attribdtl_Description" + "Like" + "'" + "%" + gettxtdesval + "%" + "'"
                  }
                  else if ($('#cont' + i).val() == "Contains" && $('#ope' + i).val() == "or") {
                      concatval = "or d.Attribdtl_Description" + "Like" + "'" + "%" + gettxtdesval + "%" + "'"
                  }
                  else if ($('#cont' + i).val() == "StartWith" && $('#ope' + i).val() == "and") {
                      concatval = "and d.Attribdtl_Description" + "Like" + "'" + "%" + gettxtdesval + "'"
                  }
                  else if ($('#cont' + i).val() == "StartWith" && $('#ope' + i).val() == "or") {
                      concatval = "or d.Attribdtl_Description" + "Like" + "'" + "%" + gettxtdesval + "'"
                  }
                  else if ($('#cont' + i).val() == "EndWith" && $('#ope' + i).val() == "and") {
                      concatval = "and d.Attribdtl_Description" + "Like" + "'" + gettxtdesval + "%" + "'"
                  }
                  else if ($('#cont' + i).val() == "EndWith" && $('#ope' + i).val() == "or") {
                      concatval = "or d.Attribdtl_Description" + "Like" + "'" + gettxtdesval + "%" + "'"
                  }
                  else if ($('#cont' + i).val() == "Equal" && $('#ope' + i).val() == "and") {
                      concatval = "and d.Attribdtl_Description" + "=" + "'" + gettxtdesval + "'"
                  }
                  else if ($('#cont' + i).val() == "Equal" && $('#ope' + i).val() == "or") {
                      concatval = "or d.Attribdtl_Description" + "=" + "'" + gettxtdesval + "'"
                  }
                  else if ($('#cont' + i).val() == "greaterthen" && $('#ope' + i).val() == "and") {
                      concatval = "and d.Attribdtl_Description" + ">" + "'" + gettxtdesval + "'"
                  }
                  else if ($('#cont' + i).val() == "greaterthen" && $('#ope' + i).val() == "or") {
                      concatval = "or d.Attribdtl_Description" + ">" + "'" + gettxtdesval + "'"
                  }
                  else if ($('#cont' + i).val() == "lessthen" && $('#ope' + i).val() == "and") {
                      concatval = "and d.Attribdtl_Description" + "<" + "'" + gettxtdesval + "'"
                  }
                  else if ($('#cont' + i).val() == "lessthen" && $('#ope' + i).val() == "or") {
                      concatval = "or d.Attribdtl_Description" + "<" + "'" + gettxtdesval + "'"
                  }
                  Dyntextvalues.push(concatval);
                  concatval = "";
              }
              else {
                  for (; z < arr.length; z++)
                  {
                      var name = arr[z];
                      var value = "";
                      if (name == Docgroupid[i])
                      {

                          if ($('#cont' + i).val() == "contains" && $('#ope' + i).val() == "and") {
                              value = Dyntextvalues[z] + "and d.Attribdtl_Description" + "Like" + "'" + "%" + gettxtdesval + "%" + "'"
                          }
                          else if ($('#cont' + i).val() == "contains" && $('#ope' + i).val() == "or") {
                              value = Dyntextvalues[z] + "or d.Attribdtl_Description" + "Like" + "'" + "%" + gettxtdesval + "%" + "'"
                          }
                          else if ($('#cont' + i).val() == "startwith" && $('#ope' + i).val() == "and") {
                              value = Dyntextvalues[z] + "and d.Attribdtl_Description" + "Like" + "'" + "%" + gettxtdesval + "'"
                          }
                          else if ($('#cont' + i).val() == "startwith" && $('#ope' + i).val() == "or") {
                              value = Dyntextvalues[z] + "or d.Attribdtl_Description" + "Like" + "'" + "%" + gettxtdesval + "'"
                          }
                          else if ($('#cont' + i).val() == "endwith" && $('#ope' + i).val() == "and") {
                              value = Dyntextvalues[z] + "and d.Attribdtl_Description" + "Like" + "'" + gettxtdesval + "%" + "'"
                          }
                          else if ($('#cont' + i).val() == "endwith" && $('#ope' + i).val() == "or") {
                              value = Dyntextvalues[z] + "or d.Attribdtl_Description" + "Like" + "'" + gettxtdesval + "%" + "'"
                          }
                          else if ($('#cont' + i).val() == "equalto" && $('#ope' + i).val() == "and") {
                              value = Dyntextvalues[z] + "and d.Attribdtl_Description" + "=" + "'" + gettxtdesval + "'"
                          }
                          else if ($('#cont' + i).val() == "equalto" && $('#ope' + i).val() == "or") {
                              value = Dyntextvalues[z] + "or d.Attribdtl_Description" + "=" + "'" + gettxtdesval + "'"
                          }
                          else if ($('#cont' + i).val() == "greaterthen" && $('#ope' + i).val() == "and") {
                              value = Dyntextvalues[z] + "and d.Attribdtl_Description" + ">" + "'" + gettxtdesval + "'"
                          }
                          else if ($('#cont' + i).val() == "greaterthen" && $('#ope' + i).val() == "or") {
                              value = Dyntextvalues[z] + "or d.Attribdtl_Description" + ">" + "'" + gettxtdesval + "'"
                          }
                          else if ($('#cont' + i).val() == "lessthen" && $('#ope' + i).val() == "and") {
                              value = Dyntextvalues[z] + "and d.Attribdtl_Description" + "<" + "'" + gettxtdesval + "'"
                          }
                          else if ($('#cont' + i).val() == "lessthen" && $('#ope' + i).val() == "or") {
                              value = Dyntextvalues[z] + "or d.Attribdtl_Description" + "<" + "'" + gettxtdesval + "'"
                          }
                          break;
                      }
                      else {
                          arr.push(Docgroupid[i]);
                          if ($('#cont' + i).val() == "contains" && $('#ope' + i).val() == "and") {
                              concatval = "and d.Attribdtl_Description" + "Like" + "'" + "%" + gettxtdesval + "%" + "'"
                          }
                          else if ($('#cont' + i).val() == "contains" && $('#ope' + i).val() == "or") {
                              concatval = "or d.Attribdtl_Description" + "Like" + "'" + "%" + gettxtdesval + "%" + "'"
                          }
                          else if ($('#cont' + i).val() == "startwith" && $('#ope' + i).val() == "and") {
                              concatval = "and d.Attribdtl_Description" + "Like" + "'" + "%" + gettxtdesval + "'"
                          }
                          else if ($('#cont' + i).val() == "startwith" && $('#ope' + i).val() == "or") {
                              concatval = "or d.Attribdtl_Description" + "Like" + "'" + "%" + gettxtdesval + "'"
                          }
                          else if ($('#cont' + i).val() == "endwith" && $('#ope' + i).val() == "and") {
                              concatval = "and d.Attribdtl_Description" + "Like" + "'" + gettxtdesval + "%" + "'"
                          }
                          else if ($('#cont' + i).val() == "endwith" && $('#ope' + i).val() == "or") {
                              concatval = "or d.Attribdtl_Description" + "Like" + "'" + gettxtdesval + "%" + "'"
                          }
                          else if ($('#cont' + i).val() == "equalto" && $('#ope' + i).val() == "and") {
                              concatval = "and d.Attribdtl_Description" + "=" + "'" + gettxtdesval + "'"
                          }
                          else if ($('#cont' + i).val() == "equalto" && $('#ope' + i).val() == "or") {
                              concatval = "or d.Attribdtl_Description" + "=" + "'" + gettxtdesval + "'"
                          }
                          else if ($('#cont' + i).val() == "greaterthen" && $('#ope' + i).val() == "and") {
                              concatval = "and d.Attribdtl_Description" + ">" + "'" + gettxtdesval + "'"
                          }
                          else if ($('#cont' + i).val() == "greaterthen" && $('#ope' + i).val() == "or") {
                              concatval = "or d.Attribdtl_Description" + ">" + "'" + gettxtdesval + "'"
                          }
                          else if ($('#cont' + i).val() == "lessthen" && $('#ope' + i).val() == "and") {
                              concatval = "and d.Attribdtl_Description" + "<" + "'" + gettxtdesval + "'"
                          }
                          else if ($('#cont' + i).val() == "lessthen" && $('#ope' + i).val() == "or") {
                              concatval = "or d.Attribdtl_Description" + "<" + "'" + gettxtdesval + "'"
                          }
                          Dyntextvalues.push(concatval);
                          concatval = "";
                      }
                  }
              }*/

        }



        debugger
        //creating array variable.
        var Dyntextvalues = [];
        for (var i = 0; i < count; i++) {

            var Attributetypes = $('#Attribtype' + i).val();
            var Attributename = $('#Attribname' + i).val();

            if (Attributetypes == "Logical") {
                var gettxtdesval = $('input[id=ctl' + i + ']:checked').val()
                if (gettxtdesval == undefined || gettxtdesval == "" || gettxtdesval == " ") {
                    gettxtdesval = "~";
                    Dyntextvalues.push(gettxtdesval);
                }
                else {
                    //concatval = "`" + Attributename + "`" + "=" + "'" + gettxtdesval + "'"
                    //concatval = "`" + Attributename + "`" + "Like" + "'" + "%" + gettxtdesval + "%" + "'"
                    Dyntextvalues.push(gettxtdesval);
                }
            }
            else {
                var gettxtdesval = $('#ctl' + i).val();
                if (gettxtdesval == "" || gettxtdesval == "-Select-" || gettxtdesval == undefined || gettxtdesval == " ") {
                    gettxtdesval = "~";
                    Dyntextvalues.push(gettxtdesval);
                }
                else {
                    //concatval = "`" + Attributename + "`" + "=" + "'" + gettxtdesval + "'"
                    // concatval = "`" + Attributename + "`" + "Like" + "'" + "%" + gettxtdesval + "%" + "'"
                    Dyntextvalues.push(gettxtdesval);
                }
            }
        }




        debugger;

        var atrname1 = atrname.join("$^`");
        var Docgroupid1 = Docgroupid.join("$^`");
        var Docnameid1 = Docnameid.join("$^`");
        var Dyntextvalues1 = Dyntextvalues.join("$^`");
        var Conditions1 = Conditions.join("$^`");
        var operators1 = operators.join("$^`");
        var Attributetypes1 = Attributetypess.join("$^`");
        //var Attributename1 = Attributename.join(",");
        var Dgroup1 = $("#Catgery").val();
        var Dname1 = $("#subCatgery").val();
        $.ajax({
            url: '@Url.Action("GetDocuments", "TreeSearch")',
            type: "Post",
            data: {
                'Attributetypes1': Attributetypes1, 'atrname1': atrname1, 'Docgroupid1': Docgroupid1, 'Docnameid1': Docnameid1, "Dyntextvalues1": Dyntextvalues1,
                'Conditions1': Conditions1, 'operators1': operators1
            },
            success: function (result) {

                debugger
                var columns = [];
                var chkval = JSON.parse(result.Data1);
                var arr = [];
                $.each(chkval, function (i, e) {
                    debugger;
                    $.each(e, function (key, val) {
                        arr.push(val);
                    });

                });

                if (arr == "No Records Found!" || arr == "Error in Data!") {
                    $.alert({
                        title: 'DMS',
                        content: 'No Records found..!',
                        type: 'blue',
                    });
                    $('#btnbulmail').prop('disabled', true);
                    return false;
                }


                var data = JSON.parse(result.Data1);
                var data2 = JSON.parse(result.Data2);
                var i = 0;

                var entryIndex = "entries[" + i + "]";
                columns.push({
                    title: "select",
                    template: '<input type="checkbox" name="attributecheckbox" id="attributecheckbox" value="" class="checkbox" ></span>'

                });

                for (var key in data[0]) {
                    var val = data2[0][key];
                    columns.push({
                        field: entryIndex,
                        title: key,
                        type: val
                    });
                    i = i + 1;
                    entryIndex = "entries[" + i + "]";

                }

                columns.push({
                    field: entryIndex + 1,
                    title: 'View File',
                    template: '<span class="fa fa-eye view" name="view" id="view" value="view" onclick=View("main")></span>',
                    //template: '<span class="glyphicon glyphicon-download Download" name="Download" id="Download" value="Download" onclick="Download()"></span>',
                    filterable: false,
                    sortable: true,
                    editable: true
                });

                var rows = [];
                var data1 = JSON.parse(result.Data1);

                $.each(data1, function (i, e) {
                    var entryArray = [];
                    $.each(e, function (key, val) {

                        entryArray.push(val);
                    });
                    rows.push(kendo.observable({
                        entries: entryArray
                    }));

                });

                var viewModel = kendo.observable({
                    gridRows: rows
                });

                var configuration = {
                    dataBound: onDataBound,
                    editable: false,
                    sortable: true,
                    scrollable: true,
                    filterable: true,
                    pagable: false,
                    resizable: true,
                    persistSelection: true,
                    selectable: "false",
                    pageable: {
                        pageSize: 5,
                        buttonCount: 4
                    },
                    columns: columns,
                    rows: viewModel
                };

                $("#example").remove();
                $('#Maingrid').append('<div id="example" style="position:relative" class="k-content"><table id="grid" data-bind="source: gridRows" style="position:relative;overflow:scroll;width:100%"></table></div>');
                var timeEditGrid = $("#grid").kendoGrid(configuration).data("kendoGrid");

                kendo.bind($("#grid"), viewModel);

                var grid = $("#grid").data("kendoGrid");
                //grid.hideColumn(3);
                //grid.hideColumn(4);
                //grid.hideColumn(5);
                for (var i = 0; i < grid.columns.length; i++) {
                    if (i != grid.columns.length) {
                        grid.autoFitColumn(i);  //autofit each column.

                    }
                }
                $('#btnbulmail').prop('disabled', false);
                //bind click event to the checkbox
                grid.table.on("click", ".checkbox", selectRow);

            },
            error: function (result) {
                alert("Error" + result.Data1);
            }
        });
    }


    //on click of the checkbox:
    function selectRow() {
        debugger
        var grid1 = $("#grid").data("kendoGrid");
        var checked = this.checked,
     row = $(this).closest("tr"),//$("input:checked", grid1.tbody).closest("tr");//$(this).closest("tr"),
        gridss = $("#grid").data("kendoGrid"),
        dataItem = gridss.dataItem(row);

        checkedIds[dataItem.entries[0]] = checked;
        if (checked) {
            //-select the row
            //row.addClass("k-state-selected");
            row.addClass("k-gridtest");
        }
        else {
            //-remove selection
            //row.removeClass("k-state-selected");
            row.removeClass("k-gridtest");
        }


        /*   var checked = this.checked,
           row = $(this).closest("tr"),
           grid = $("#grid").data("kendoGrid"),
           dataItem = grid.dataItem(row);

           checkedIds[dataItem.id] = checked;
           if (checked) {
               //-select the row
               row.addClass("k-state-selected");
           } else {
               //-remove selection
               row.removeClass("k-state-selected");
           }*/
    }


    //on dataBound event restore previous selected rows:
    function onDataBound(e) {
        debugger
        var checked = [];
        for (var i in checkedIds) {
            if (checkedIds[i]) {
                checked.push(i);
                //row.addClass("k-state-selected");
            }
        }
        debugger
        var view = this.dataSource.view();
        for (var i = 0; i < view.length; i++) {
            if (checkedIds[view[i].entries[0]]) {
                this.tbody.find("tr[data-uid='" + view[i].uid + "']")
                //.addClass("k-state-selected")
                .addClass("k-gridtest")
                .find(".checkbox")
                .attr("checked", "checked");
            }
        }


    }

    objDialog1 = $("[id$='ForTreeSearchpartialView']");
    objDialog1.dialog({
        autoOpen: false,
        modal: true,
        width: 850,
        height: 650
    });

    function View(type) {
        debugger;
        var grid;
        grid = $("#grid").data("kendoGrid");
        model = grid.dataItem($(event.target).closest("tr"));
        $("#hdn_filegid").val("");
        //filegid = (model.entries[2]);
        filegid = (model.entries[2]);
        $("#hdn_filegid").val(filegid);
        var mode = type;
        objDialog5.load('../TreeSearch/ViewIndexedDocDetails?filegid=' + filegid);
        objDialog5.dialog({ title: 'Archival Details' });
        objDialog5.dialog("open");
    }

    function forbulkMail() {
        debugger;
        //var grid = $("#grid").data("kendoGrid");
        //var model = grid.dataItem($(event.target).closest("tr"));
        //var attachedid = (model.entries[0]);
        //$("#hdn_attachid").val(" ");
        //$("#hdn_linkorinterfile").val(" ");
        $("#hdn_mailtype").val("");
        $("#hdn_mailtype").val("multiple");
        //$("#hdn_attachid").val(attachedid);
        //$("#hdn_linkorinterfile").val("index");
        objDialog.load('../TreeSearch/Showmailpartialview');
        objDialog.dialog({ title: 'Send Mail' });
        objDialog.dialog("open");
        return false;
    }

    function ClearData() {
        window.location.href = '@Url.Action("Index","TreeSearch")';
    }

    function downloadfile() {
        debugger;
    var downloadpath = $("#hdn_filelocation").val();
        $.ajax({
            url: '@Url.Action("Downloadmailfile", "TreeSearch")',
            type: "POST",
            datatype: "json",
            async: false,
            data: { 'downloadpath': downloadpath},
        }).done(function (data) {
            debugger;
            //get the file name for download
            if (data.downloadpath != "") {
                //use window.location.href for redirect to download action for download the file
                window.location.href = "@Url.RouteUrl(new { Controller = "TreeSearch", Action = "DownloadMailFile1" })/?downloadpath=" + data.downloadpath;
            }
        });
    }
</script>







