@using Kendo.Mvc.UI;
@using Kendo.Mvc.UI.Fluent;
@using Kendo.Mvc.Extensions;
@model DMS.Model.DocNameMaster_Model

<!Doctype html>
<html>
<head>
    <title></title>
    <style>
        .error_show {
            color: red;
            margin-left: 10px;
        }

        .k-state-active {
            display: none;
        }

        .k-header {
            font-weight: bold;
        }
    </style>

</head>
<body class="hold-transition skin-blue sidebar-mini fixed">
    <div class="content-wrapper">
        <section class="content">
            <div class="row">
                <div class="col-md-12">
                    <div class="box box-orange" style="height:650px">
                        <div class="box-header text-center with-border">
                            <h3 class="box-title">Doc Name</h3>
                        </div>
                        <div>
                            <table>
                                <tr>
                                    <td>
                                        <button type="submit" onclick="return AddNew()" class="btn btn-danger pull-left"><span class="fa fa-plus-circle"></span> Add New</button>
                                    </td>

                                </tr>
                            </table>
                        </div>
                        @using (Html.BeginForm("DocNameMaster", "DocNameMaster", FormMethod.Post, new { @id = "form2" }))
                        {
                            @*  <div>
                                    @(Html.Kendo().Grid<DMS.Model.DocNameMaster_Model>().Name("DocName")
                                    .HtmlAttributes(new { style = "width:100%;line-height:2em;font-weight:normal;" })
                                    .Resizable(resizing => resizing.Columns(true))
                                    .Columns(columns =>
                                    {
                                        columns.Bound(m => m.DNameID).Title("SL No").Width(20);
                                        columns.Bound(m => m.DocName).Title("Doc Name").Width(80);
                                        columns.Bound(m => m.Dname_Shortname).Title("Short Name").Width(80);
                                        columns.Bound(m => m.DgroupName).Title("Doc Group").Width(80);
                                        columns.Bound(m => m.Unit).Title("Unit").Width(100);
                                        columns.Bound(m => m.Dept_Name).Title("Department").Width(100);
                                        columns.Command(cmd => { cmd.Edit(); }).Title("Edit").Width(50);
                                        columns.Template(p => { }).ClientTemplate("<button type='button' onclick='return myDeleteJs()'><i class='fa fa-trash-o' aria-hidden='true'></i>Delete</button>").Width(50).Title("Delete");
                                    })
                                    .ToolBar(toolbar => toolbar.Create().Text("Add New DocName"))
                                    .Editable(editable => { editable.Mode(GridEditMode.PopUp).TemplateName("DocNameMasterPartialPopUp"); })
                                    .Pageable(pageable => pageable
                                            .Refresh(true)
                                            .PageSizes(true)
                                            .ButtonCount(5))
                                    .Filterable()
                                    .Scrollable(scroll => scroll.Height(400).Enabled(true))
                                    .Sortable()
                                    .DataSource(dataSource => dataSource
                                    .Ajax()
                                    .PageSize(10)
                                    .Events(events => events.Error("error_handler"))
                                    .Model(model => model.Id(p => p.UnitID))
                                    .Create(Create => Create.Action("SaveDocName", "DocNameMaster"))
                                    .Read(read => read.Action("GetAllDocNames", "DocNameMaster"))
                                    .Update(update => update.Action("UpdateDocName", "DocNameMaster"))
                                    .Destroy(delete => delete.Action("DeleteDocName", "DocNameMaster"))))

                                </div>*@
                            <div id="divgridDocName"></div>
                        }
                    </div>
                </div>
            </div>
            <div class="col-md-12 table-responsive">
                @(Html.Kendo().Window()
                                .Name("myDocNameWin")
                                .Events(ev => ev.Close("RefreshDatasource_Exemption"))
                                .Title("Doc Name") //set the title of the window
                                .Content(@<text> @Html.Partial("DocNameMasterPartialPopUp") </text>)
                                                        .Draggable()
                                                        .Resizable()
                        //                                .Width(auto)
                        //                               .Height(450)
                                                        .Modal(true)
                                                        .Visible(false))

            </div>
        </section>
    </div>
</body>
</html>
<script type="text/javascript">

    var mode = "";
    var Dnameid = "";
    var DPval = "";
    var orglevelcode1 = "";
    var orglevelcode2 = "";
    var orglevelcode3 = "";
    var orglevelcode4 = "";
    loaddynamiccolumns();
    function loaddynamiccolumns() {
        try {
            $.ajax({
                type: "POST",
                contentType: "application/json; charset=utf-8",
                async: false,
                url: '@Url.Action("getlabellist", "DocGroupMaster")',
                data: "{}",
                success: function (data) {
                    debugger;
                    // var orglevelcode1 = data[0].orghierarchy_code;
                    if (data.length >= 1) {
                        orglevelcode1 = data[0].orghierarchy_code;
                        // orglevelval1 = $("#" + orglevelcode1).val();
                    }
                    if (data.length >= 2) {
                        orglevelcode2 = data[1].orghierarchy_code;
                        // orglevelval2 = $("#" + orglevelcode2).val();
                    }
                    if (data.length >= 3) {
                        orglevelcode3 = data[2].orghierarchy_code;
                        //orglevelval3 = $("#" + orglevelcode3).val();
                    }
                    if (data.length == 4) {
                        orglevelcode4 = data[3].orghierarchy_code;
                        //orglevelval4 = $("#" + orglevelcode4).val();
                    }


                    // alert(orglevelcode1);
                    //setTimeout(function () {
                    //    window.location.reload(1);
                    //}, 2500);
                },
            });
        } catch (er) {
            alert(er);
        }
    }
    function RefreshDatasource_Exemption() {
        debugger;
        //$("#grid").data("kendoGrid").dataSource.read();
        //var wdw = $("#myDocNameWin").data("kendoWindow"); //get the Window widget's instance
        //wdw.close();
        BindDocNameGrid();
    }
    function error_handler(e) {
        if (e.errors) {
            var message = "Errors:\n";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "\n";
                    });
                }
            });
            $.alert({
                title: 'DMS',
                content: message,
                type: 'blue',
            });
        }
    }

    function onChangeDocGroup() {
        debugger;
        var masteritemid = this.value();
        var master = "DocGr"
        if (masteritemid == "" || masteritemid == null || masteritemid == "undefined" || masteritemid == 0) {
            return false;
        }
        else {
            /*$.getJSON("DocGroupDropDown/DocNameMaster?masteritemid=" + masteritemid + "&master=" + master, function (data) {
                debugger;
                var unit = data.unitdropdownlist;
                var dept = data.deptdropdownlist;
                $("#UnitID").data("kendoDropDownList").dataSource.data(unit);
                $("#Dept_Id").data("kendoDropDownList").dataSource.data(dept);
                if (unit.length == 2) {
                    $("#UnitID").data("kendoDropDownList").select(1)
                    $("#UnitID").data("kendoDropDownList").trigger("change");
                }
                else {
                    $("#UnitID").data("kendoDropDownList").select(0)
                }
                if (dept.length == 2) {
                    $("#Dept_Id").data("kendoDropDownList").select(1)
                    $("#Dept_Id").data("kendoDropDownList").trigger("change");
                }
                else {
                    $("#Dept_Id").data("kendoDropDownList").select(0)
                }

            });*/
            var url = '@Url.Action("DocGroupNames", "DocGroupMaster")?parentcode=' + master + '&dependcode=' + masteritemid;
            $.getJSON(url, function (data) {
                debugger;
                var dept = data;
                if (dept.length > 1) {
                    var ee = data[1].parent_code;
                    $("#" + ee).data("kendoDropDownList").value(data[1].master_code);
                    $("#" + ee).data("kendoDropDownList").trigger("change");
                }
                else {
                    var ee = data[0].parent_code;
                 //   $("#" + ee).data("kendoDropDownList").select(0);
                }

            });
        }
    }
    function SaveDocName(){
        debugger;
        var orglevelval1 = "";
        var orglevelval2 = "";
        var orglevelval3 = "";
        var orglevelval4 = "";
        var Docuname = "";
        var Docgrpval = "";
        var Shortname = "";
        var apval = "";
        var ppval = "0";
        DPval = $('input[name="DocPeriod"]:checked').val();
       // alert(DPval);
        $.ajax({
            type: "POST",
            contentType: "application/json; charset=utf-8",
            async: false,
            url: '@Url.Action("getlabellist", "DocGroupMaster")',
            data: "{}",
            success: function (data) {
                debugger;
                // var orglevelcode1 = data[0].orghierarchy_code;
                if (data.length >= 1) {
                    orglevelcode1 = data[0].orghierarchy_code;
                    orglevelval1 = $("#" + orglevelcode1).val();
                }
                if (data.length >= 2) {
                    orglevelcode2 = data[1].orghierarchy_code;
                    orglevelval2 = $("#" + orglevelcode2).val();
                }
                if (data.length >= 3) {
                    orglevelcode3 = data[2].orghierarchy_code;
                    orglevelval3 = $("#" + orglevelcode3).val();
                }
                if (data.length == 4) {
                    orglevelcode4 = data[3].orghierarchy_code;
                    orglevelval4 = $("#" + orglevelcode4).val();
                }

                Docgrpval = $("#DgroupID").val();
                Docuname = $("#txtDocName").val();
                Shortname = $("#txtDocShName").val();
                apval = $("#AP").val();
                //  ppval = $("#PP").val();
                ppval = "0";
              //  alert(Docuname);
                if (Docuname == "" || Docuname == null || Docuname == "undefined" || Docuname == 0) {
                   // alert("Document Name Cannot be Empty");
                    $.alert({
                        icon: 'fa fa-success',
                        title: 'DMS',
                        // theme: 'dark',
                        content: 'Document Name Cannot be Empty!',
                        type: 'yellow',
                        animationSpeed: 700,
                    });
                    return false;
                } else if (Shortname == "" || Shortname == null || Shortname == "undefined" || Shortname == 0) {
                   // alert("ShortName Cannot be Empty");
                    $.alert({
                        icon: 'fa fa-success',
                        title: 'DMS',
                        // theme: 'dark',
                        content: 'ShortName Cannot be Empty!',
                        type: 'yellow',
                        animationSpeed: 700,
                    });
                    return false;
                }
                else if (Docgrpval == "" || Docgrpval == null || Docgrpval == "undefined" || Docgrpval == 0) {
                   // alert("Docgroup Name Cannot be Empty");
                    $.alert({
                        icon: 'fa fa-success',
                        title: 'DMS',
                        // theme: 'dark',
                        content: 'Docgroup Name Cannot be Empty!',
                        type: 'yellow',
                        animationSpeed: 700,
                    });
                    return false;
                }
                else if (DPval == "" || DPval == null || DPval == "undefined" || DPval == 0) {
                   // alert("Doc Period Applicability Cannot be Empty");
                    $.alert({
                        icon: 'fa fa-success',
                        title: 'DMS',
                        // theme: 'dark',
                        content: 'Doc Period Applicability Cannot be Empty!',
                        type: 'yellow',
                        animationSpeed: 700,
                    });
                    return false;
                }
                else if (DPval == "Y" && (apval == "" || apval == "0" || apval == "Select")) {
                  //  alert("Active Period Cannot be Empty");
                    $.alert({
                        icon: 'fa fa-success',
                        title: 'DMS',
                        // theme: 'dark',
                        content: 'Active Period Cannot be Empty!',
                        type: 'yellow',
                        animationSpeed: 700,
                    });
                    return false;
                }
                //else if (DPval == "Y" && (ppval == "" || ppval == "0" || ppval == "Select")) {
                //    //alert("Passive Period Cannot be Empty");
                //    $.alert({
                //        icon: 'fa fa-success',
                //        title: 'DMS',
                //        // theme: 'dark',
                //        content: 'Passive Period Cannot be Empty!',
                //        type: 'yellow',
                //        animationSpeed: 700,
                //    });
                //    return false;
                //}
                else if ((orglevelcode1 != "" && orglevelcode1 != "" && orglevelcode1 != "undefined") && (orglevelval1 == "" || orglevelval1 == null || orglevelval1 == "undefined" || orglevelval1 == 0)) {
                    alert(orglevelcode1 + " Cannot be Empty");
                    return false;
                }
                else if ((orglevelcode2 != "" && orglevelcode2 != "" && orglevelcode2 != "undefined") && (orglevelval2 == "" || orglevelval2 == null || orglevelval2 == "undefined" || orglevelval2 == 0)) {
                    alert(orglevelcode2 + " Cannot be Empty");
                    return false;
                }
                else if ((orglevelcode3 != "" && orglevelcode3 != "" && orglevelcode3 != "undefined") && (orglevelval3 == "" || orglevelval3 == null || orglevelval3 == "undefined" || orglevelval3 == 0)) {
                    alert(orglevelcode3 + " Cannot be Empty");
                    return false;
                }
                else if ((orglevelcode4 != "" && orglevelcode4 != "" && orglevelcode4 != "undefined") && (orglevelval4 == "" || orglevelval4 == null || orglevelval4 == "undefined" || orglevelval4 == 0)) {
                    alert(orglevelcode4 + " Cannot be Empty");
                    return false;
                }
                else {
                    // if (mode == "I") {
                    //   alert("insert");
                    // Create.Action("DocGroupGrid_Save", "DocGroupMaster").Data("setparams"));
                    if (orglevelval4 == "undefined" || orglevelval4 == null) {
                        orglevelval4 = "";
                    }
                    if (orglevelval3 == "undefined" || orglevelval3 == null) {
                        orglevelval3 = "";
                    }
                    if (orglevelval2 == "undefined" || orglevelval2 == null) {
                        orglevelval2 = "";
                    }
                    if (orglevelval1 == "undefined" || orglevelval1 == null) {
                        orglevelval1 = "";
                    }
                    $.ajax({
                        type: "POST",
                        contentType: "application/json; charset=utf-8",
                        async: false,
                        url: '@Url.Action("SaveDocName", "DocNameMaster")?DnameId=' + Dnameid + '&DocGrpID=' + Docgrpval + '&DocName=' + Docuname + '&ShortName=' + Shortname + '&mode=' + mode + '&dpval=' + DPval + '&AP=' + apval + '&PP=' + ppval,
                        data: "{}",
                        success: function (data) {
                            var out = "";
                            if (mode == "U") {
                                out = "Doc Name has been Edited successfully!"
                            } else {
                                out = "Doc Name has been Created successfully!"
                            }
                            debugger;
                            $.dialog({
                                title: 'DMS',
                                content: out,
                                type: 'green',
                            });
                            closeopup();
                        }, error: function (result) {
                            // alert("Error" + result.Data1);
                            $.alert({
                                title: 'DMS',
                                content: "Error" + result,
                                type: 'red',
                            });
                            closeopup();
                        }
                    });
                    //} else {
                    //    alert("update");
                    //}
                }

                // alert(orglevelcode1);
                //setTimeout(function () {
                //    window.location.reload(1);
                //}, 2500);
            },
        });
    }

    function onChangeunit() {
        debugger;
        var masteritemid = this.value();
        //var master = "Unit"
        var master = ""
        if (masteritemid == "" || masteritemid == null || masteritemid == "undefined" || masteritemid == 0) {
            return false;
        }
        else {
       /*     $.getJSON("UnitDropDown/DocNameMaster?masteritemid=" + masteritemid + "&master=" + master, function (data) {
                debugger;
                var dept = data;
                $("#Dept_Id").data("kendoDropDownList").dataSource.data(dept);

                if (dept.length == 2) {
                    $("#Dept_Id").data("kendoDropDownList").select(1)
                }
                else {
                    $("#Dept_Id").data("kendoDropDownList").select(0)
                }

            });*/
            var url = '@Url.Action("DocGroupNames", "DocGroupMaster")?parentcode=' + master + '&dependcode=' + masteritemid;
            $.getJSON(url, function (data) {
                debugger;
                var dept = data;
                if (dept.length > 1) {
                    var ee = data[1].parent_code;
                    $("#" + ee).data("kendoDropDownList").value(data[1].master_code);
                    $("#" + ee).data("kendoDropDownList").trigger("change");
                }
                else {
                    //var ee = data[0].parent_code;
                    //$("#" + ee).data("kendoDropDownList").select(0);
                }

            });
        }
    }

    $(document).ready(function () {
       // debugger;
        //$("#DocName").data("kendoGrid").dataSource.bind("requestEnd", onRequestEnd);
        ////code for showing confirmation alert message once the delete button is clicked.
        ////$("#DocName").data("kendoGrid").setOptions({ "editable": { "confirmation": true } });
        //var grid = $("#DocName").data("kendoGrid");
        ////function for changing kendo popup title.
        //grid.bind("edit", function (event) {
        //    debugger;
        //    event.container.parent().find('.k-window-title').text(event.model.isNew() ? "New" : "Edit");
        //});
        debugger;
        $('#rbY').click(function() {

            $("#peroidtable").show();

        });
        $('#rbN').click(function () {
            $("#peroidtable").hide();
        })
        BindDocNameGrid();
        var input = document.querySelector('input.number');
        input.addEventListener('keyup', function (event) {
            if (event.which != 8 && event.which != 0 && event.which < 48 || event.which > 57) {
                this.value = this.value.replace(/\D/g, "");
            }
        });
    })

    function onRequestEnd(e) {
        debugger;
        //Check request type
        if (e.type == "create") {
            //check for errors in the response
            if (e.response == null || e.response.Errors == null) {
                $.dialog({
                    title: 'DMS',
                    content: 'Doc Name has been created successfully!',
                    type: 'green',
                });
                setTimeout(function () {
                    window.location.reload(1);
                }, 2500);
            }
        }
        if (e.type == "update") {
            //check for errors in the response
            if (e.response == null || e.response.Errors == null) {
                $.dialog({
                    title: 'DMS',
                    content: 'Doc Name has been Edited successfully!',
                    type: 'green',
                });
                setTimeout(function () {
                    window.location.reload(1);
                }, 2500);
            }
        }
    }

    function myDeleteJs() {
        debugger;
        var grid = $("#DocName").data("kendoGrid");
        var model = grid.dataItem($(event.target).closest("tr"));
        var DNameID = (model.DNameID);

        $.confirm({
            icon: 'fa fa-warning',
            title: 'DMS',
            autoClose: 'cancel|10000',
            theme: 'dark',
            animationSpeed: 700,
            content: 'Are you sure do you want to delete this record!',
            type: 'orange',
            buttons: {
                confirm: function () {
                    $.ajax({
                        type: "POST",
                        contentType: "application/json; charset=utf-8",
                        async: false,
                        url: '@Url.Action("DeletingDocName", "DocNameMaster")',
                        data: "{ DNameID:'" + DNameID + "'}",
                        success: function (data) {
                            debugger;
                            if (data == 'Success') {
                                $.alert({
                                    icon: 'fa fa-success',
                                    title: 'DMS',
                                   // theme: 'dark',
                                    content: 'Record deleted.!',
                                    type: 'green',
                                    animationSpeed: 700,
                                });
                            }
                            setTimeout(function () {
                                window.location.reload(1);
                            }, 2500);
                        },
                    });

                },
                cancel: function () {
                    $.alert({
                        icon: 'fa fa-success',
                        title: 'DMS',
                        theme: 'dark',
                        content: 'Delete Canceled.!',
                        type: 'blue',
                        animationSpeed: 700,
                    });
                },
            }
        });
    }

    function BindDocNameGrid()
    {
        debugger;
        $.ajax({
            url: '@Url.Action("GetAllDocNames", "DocNameMaster")',
            success: function (result) {
                debugger;
                if (result != null && result != "" && result != "undefined") {

                    var chkval = JSON.parse(result.Data1);
                    var arr = [];
                    $.each(chkval, function (i, e) {
                        $.each(e, function (key, val) {
                            arr.push(val);
                        });
                    });

                    if (arr == "NoRecords") {
                        $.alert({
                            title: 'DMS',
                            content: 'No Records found..!',
                            type: 'blue',
                        });
                        return false;
                    }

                    var columns = [];
                    var data = JSON.parse(result.Data1);
                    var data2 = JSON.parse(result.Data2);
                    var i = 0;

                    var entryIndex = "entries[" + i + "]";

                    for (var key in data[0]) {
                        var val = data2[0][key];
                        columns.push({
                            field: entryIndex,
                            title: key,
                            //width: '50px',
                            type: val,
                        });

                        i = i + 1;
                        entryIndex = "entries[" + i + "]";
                    }

                    columns.push({
                        field: entryIndex + 1,
                        title: 'Action',
                        template: '<span class="btn btn-orange fa fa-edit edit" name="Edit" id="Edit" value="Edit" onclick="Edit()"></span>',
                        filterable: false,
                        sortable: true,
                        width: 80,
                        editable: true
                    });

                    var rows = [];
                    var data1 = JSON.parse(result.Data1);

                    $.each(data1, function (i, e) {
                        var entryArray = [];
                        $.each(e, function (key, val) {

                            entryArray.push(val);
                        });
                        rows.push(kendo.observable({
                            entries: entryArray
                        }));

                    });

                    var viewModel = kendo.observable({
                        gridRows: rows
                    });

                    var configuration = {
                        editable: false,
                        sortable: true,
                        scrollable: false,
                        filterable: true,
                        pagable: true,
                        resizable: true,
                        selectable: 'row',
                        pageable: {
                            pageSize: 8,
                            buttonCount: 4
                        },
                        columns: columns,
                        rows: viewModel,
                        dataBound: function () {
                            //for (var i = 0; i < this.columns.length; i++) {
                            //    this.autoFitColumn(i);
                            //}
                        },
                    };

                    $("#example").remove();
                    $('#divgridDocName').append('<div id="example" style="position:relative" class="k-content"><table id="grid" data-bind="source: gridRows"></table></div>');
                    var divGrid = $("#grid").kendoGrid(configuration).data("kendoGrid");
                    kendo.bind($("#grid"), viewModel);

                    var grid = $("#grid").data("kendoGrid");
                    if (orglevelcode4 != "" && orglevelcode4 != null && orglevelcode4 != "undefined") {
                        grid.hideColumn(7);
                        grid.hideColumn(8);
                        grid.hideColumn(9);
                        grid.hideColumn(10);
                        grid.hideColumn(11);
                        grid.hideColumn(12);
                        grid.hideColumn(13);
                        grid.hideColumn(14);
                    //    grid.hideColumn(15);
                    } else if (orglevelcode3 != "" && orglevelcode3 != null && orglevelcode3 != "undefined") {
                        grid.hideColumn(6);
                        grid.hideColumn(7);
                        grid.hideColumn(8);
                        grid.hideColumn(9);
                        grid.hideColumn(10);
                        grid.hideColumn(11);
                        grid.hideColumn(12);
                        grid.hideColumn(13);
                        grid.hideColumn(14);
                      //  grid.hideColumn(15);
                    } else if (orglevelcode2 != "" && orglevelcode2 != null && orglevelcode2 != "undefined") {
                        grid.hideColumn(5);
                        grid.hideColumn(6);
                        grid.hideColumn(7);
                        grid.hideColumn(8);
                        grid.hideColumn(9);
                        grid.hideColumn(10);
                        grid.hideColumn(11);
                        grid.hideColumn(12);
                        grid.hideColumn(13);
                        grid.hideColumn(14);
                      //  grid.hideColumn(15);
                    } else if (orglevelcode1 != "" && orglevelcode1 != null && orglevelcode1 != "undefined") {
                        grid.hideColumn(4);
                        grid.hideColumn(5);
                        grid.hideColumn(6);
                        grid.hideColumn(7);
                        grid.hideColumn(8);
                        grid.hideColumn(9);
                        grid.hideColumn(10);
                        grid.hideColumn(11);
                        grid.hideColumn(12);
                        grid.hideColumn(13);
                        grid.hideColumn(14);
                      //  grid.hideColumn(15);
                    }
                    //grid.hideColumn(3);
                    // grid.hideColumn(5);
                    //  grid.hideColumn(6);
                    //for (var i = 0; i < grid.columns.length; i++) {
                    //    if (i != grid.columns.length) {
                    //        grid.autoFitColumn(i);  //autofit each column.

                    //    }
                    //}

                    //$("#grid").data("kendoGrid").hideColumn(7);
                    //$("#grid").data("kendoGrid").hideColumn(8);
                    //$("#grid").data("kendoGrid").hideColumn(9);
                    //$("#grid").data("kendoGrid").hideColumn(10);
                    //$("#grid").data("kendoGrid").hideColumn(11);
                    //$("#grid").data("kendoGrid").hideColumn(12);
                    //$("#grid").data("kendoGrid").hideColumn(13);
                } else {
                    $.alert({
                        title: 'DMS',
                        content: 'Data Not Found',
                        type: 'red',
                    });
                }
            },
            error: function () {
                $.alert({
                    title: 'DMS',
                    content: 'Some error has occurred.!',
                    type: 'red',
                });
            }
        })

    }

    function Edit()
    {
        debugger;
        mode = "U";
        var grid = $("#grid").data("kendoGrid");
        var model = grid.dataItem($(event.target).closest("tr"));
        debugger;
        console.log(model);
        //console.log(model.entries[1]);
        var wdw = $("#myDocNameWin").data("kendoWindow"); //get the Window widget's instance
        wdw.open();
        wdw.center();
        $("#hdDocNameID").val(model.entries[12]);
        Dnameid = model.entries[12];
        $("#txtDocName").val(model.entries[0]);
        $("#txtDocShName").val(model.entries[1]);
        //$("#DgroupID").val(model.entries[11]);
        $("#DgroupID").data("kendoDropDownList").value(model.entries[11]);
        var docperiod = model.entries[13];
        if (docperiod == "Y") {
            $('#rbY').prop('checked', true);
            $('#rbN').prop('disabled', true);
            $('#peroidtable').show();
        } else {
            $('#rbN').prop('checked', true);
            $('#rbY').prop('disabled', true);
            $('#peroidtable').hide();
        }
        try{
            $("#AP").val(model.entries[14]);
           // $("#PassivePeroid").data("kendoDropDownList").value(model.entries[15]);
        }catch(e){

        }
        var masteritemid = model.entries[11];
        var master = "DocGr"
        if (masteritemid == "" || masteritemid == null || masteritemid == "undefined" || masteritemid == 0) {
            return false;
        }
        else {

            var url = '@Url.Action("DocGroupNames", "DocGroupMaster")?parentcode=' + master + '&dependcode=' + masteritemid;
            $.getJSON(url, function (data) {
                debugger;
                var dept = data;

                if (dept.length > 1) {
                    var ee = data[1].parent_code;
                    if (ee != null && ee != "" && ee != "undefined") {
                        $("#" + ee).data("kendoDropDownList").value(data[1].master_code);
                        $("#" + ee).data("kendoDropDownList").trigger("change");
                    }
                }
                else {
                    try {
                        debugger;
                        var ee = data[0].parent_code;
                    //    $("#" + ee).data("kendoDropDownList").select(0);
                    }
                    catch(e){}
                }

            });
        }
    }

    function AddNew()
    {
        //console.log($("#txtDocName").val());
        mode = "I";
        Dnameid = "0";
        var wdw = $("#myDocNameWin").data("kendoWindow"); //get the Window widget's instance
        wdw.open();
        wdw.center();
        $("#hdDocNameID").val(0);
        $("#txtDocName").val("");
        $("#txtDocShName").val("");
        //$("#DgroupID").val(model.entries[11]);
        $("#DgroupID").data("kendoDropDownList").value(0);
        $('#rbN').prop('checked', true);
        $('#rbY').prop('disabled', false);
        $('#rbN').prop('disabled', false);
        $('#peroidtable').hide();
        $('#AP').val("");
    }

    function closeopup() {
        debugger;
        try {
            var wdw = $("#myDocNameWin").data("kendoWindow"); //get the Window widget's instance
            wdw.close();
        } catch (er) {

        }
    }
</script>
