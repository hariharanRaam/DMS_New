@model  List<DMS.Model.ViewDocuments_Model>
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!DOCTYPE html>
<html>
<head>
    <title></title>
    <style>
        div.ex1 {
            background-color: white;
            height: 170px;
            width: 1000px;
            overflow-y: auto;
            column-span: all;
        }

        .Name1 {
            right: 350px;
            width: 800px;
            display: inline-block;
            text-align: right;
            position: relative;
            color: #FF0000;
        }
    </style>
    <link rel="stylesheet" href="//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css">
</head>

<body class="hold-transition skin-blue sidebar-mini fixed">
    <div class="content-wrapper">
        <section class="content">
            <div class="row">
                <div class="col-md-12">
                    <div class="box box-orange">
                        <div class="box-header text-center with-border">
                            <h3 class="box-title">Storage Hierarchy</h3>
                        </div>
                        <form class="form-horizontal" id="form" method="post" enctype="multipart/form-data" style="height:100%">
                            <div class="box-body">
                                <div class="row">
                                    <div class="col-md-8">
                                        <div class="form-group">
                                            <label class="col-md-6 control-label">Doc Name</label>
                                            <div class="col-md-6">
                                                <select id="subCatgery" name="subCatgery" onchange="fetchDocName()" class="form-control"></select>
                                                <span class="errormessage" id="erridmsg"></span>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <label class="col-md-6 control-label">Doc Group</label>
                                            <div class="col-md-6">
                                                <select id="Catgery" name="Catgery" onchange="fetchDocGroup()" class="form-control"></select>
                                                <span class="errormessage" id="erridmsg"></span>
                                            </div>
                                        </div>

                                        <div class="form-group" style="display:none" id="orgcol4">
                                            <label class="col-md-6 control-label" id="orglvl4lbl">Orglvl4</label>
                                            <div class="col-md-6">
                                                <select id="orglvl4val" name="orglvl4val" onchange="onChangeunit(this, 'orglvl3val')" class="form-control"></select>
                                                <span class="errormessage" id="erridmsg"></span>
                                            </div>

                                        </div>

                                        <div class="form-group" style="display:none" id="orgcol3">
                                            <label class="col-md-6 control-label" id="orglvl3lbl">Orglvl3</label>
                                            <div class="col-md-6">
                                                <select id="orglvl3val" name="orglvl3val" onchange="onChangeunit(this, 'orglvl2val')" class="form-control"></select>
                                                <span class="errormessage" id="erridmsg"></span>
                                            </div>

                                        </div>

                                        <div class="form-group" style="display:none" id="orgcol2">
                                            <label class="col-md-6 control-label" id="orglvl2lbl">Orglvl2</label>
                                            <div class="col-md-6">
                                                <select id="orglvl2val" name="orglvl2val" onchange="onChangeunit(this,'orglvl1val')" class="form-control"></select>
                                                <span class="errormessage" id="erridmsg"></span>
                                            </div>

                                        </div>

                                        <div class="form-group" style="display:none" id="orgcol1">
                                            <label class="col-md-6 control-label" id="orglvl1lbl">Orglvl1</label>
                                            <div class="col-md-6">
                                                <select id="orglvl1val" name="orglvl1val" onchange="onChangeunit(this, '')" class="form-control"></select>
                                                <span class="errormessage" id="erridmsg"></span>
                                            </div>

                                        </div>
                                        <div class="form-group">
                                            <label class="col-md-6 control-label">Same As</label>
                                            <div class="col-md-6">
                                                <table width="100%">
                                                    <tr>
                                                        <td style="width:300px;">
                                                            <select id="samesubcategory" name="samesubcategory" class="form-control"></select>
                                                            <span class="errormessage" id="erridmsg"></span>
                                                        </td>
                                                        <td style="padding-left:7px;">
                                                            <button type="button" value="View" id="btnView" onclick="return Storageattributeview();" class="btn btn bg-blue" data-dismiss="modal">
                                                                <span class="glyphicon glyphicon-eye-open"></span>
                                                            </button>
                                                        </td>
                                                        <td>
                                                            <button type="button" class="btn btn bg-green " id="addrowsameas" data-dismiss="modal">
                                                                <span class="glyphicon glyphicon-plus"></span>
                                                            </button>
                                                        </td>
                                                    </tr>
                                                </table>
                                                <span class="errormessage" id="erridmsg"></span>
                                            </div>
                                        </div>
                                        <div id="ForPartialViewStorageAttribute"></div>
                                    </div>
                                </div>
                            </div>
                            <div class="box-body">
                                <div class="row">

                                    <div style="left:100px;position:relative">
                                        <table style="width:75%">
                                            <tr>
                                                <td style="width:100px;">
                                                    <label class="Lbl">Order By</label>
                                                </td>
                                                <td style="width:150px;">
                                                    <label> Storage Type</label>
                                                </td>
                                                <td style="width:100px;">
                                                    <label>Type </label>
                                                </td>
                                                <td style="width:170px;">
                                                    <label>Length</label>
                                                </td>

                                                <td style="width:100px;">
                                                    <label class="Lbl">Mandatory</label>
                                                </td>


                                                <td class="col-sm-1" style="width:300px;">
                                                    <button type="button" class="btn btn bg-green " id="addrow" data-dismiss="modal">
                                                        <span class="glyphicon glyphicon-plus"></span>
                                                    </button>
                                                </td>

                                            </tr>
                                            <tr>
                                                <td colspan="6">
                                                    <div class="ex1">
                                                        <table id="myTable" class="table order-list"></table>
                                                    </div>
                                                </td>
                                            </tr>
                                        </table>
                                    </div>

                                </div>
                            </div>

                            <div class="box-footer">
                                <table align="center">
                                    <tr>
                                        <td width="200px"></td>
                                        <td>
                                            <button type="submit" class="btn btn-danger pull-right">Cancel</button>
                                        </td>
                                        <td width="15px"></td>
                                        <td>
                                            <input type="button" name="btnsubmit" value="submit" id="btnsubmit" class="btn btn-orange pull-right" />
                                        </td>
                                        <td width="15px"></td>
                                        <td>
                                            <input type="button" name="btnsubmit" value="View" id="btnsubmit" onclick="btnview()" class="btn btn-orange pull-right" />
                                        </td>
                                    </tr>
                                </table>
                                <div style="color:green">
                                    <table align="center">
                                        <tr>
                                            <td>
                                                @if (@ViewBag.Message == "File uploaded successfully")
                                                {
                                                    <span class="Success_show">@ViewBag.Message</span>
                                                }
                                            </td>
                                        </tr>
                                    </table>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </section>

    </div>

</body>
</html>

<script>
    var maxorglvl = 0;
    function onChangeunit(sel, idval) {
        //    alert(this.value());
        debugger;
        var id = idval;
        // alert(idval);

        try {

            var mastercode = sel.value;
            var master = ""
            if (mastercode == "" || mastercode == null || mastercode == "undefined" || mastercode == 0) {
                return false;
            }
            else {
                debugger;
                $.getJSON("DocGroupNames/DocGroupMaster?parentcode=" + master + "&dependcode=" + mastercode, function (data) {
                    debugger;
                    var dept = data;
                    // maxorglvl = dept.length;

                    //$("#Dept_Id").data("kendoDropDownList").dataSource.data(data[1]);
                    if (dept.length > 1) {
                        var ee = data[1].parent_code;

                        $("#" + idval).empty();
                        //   for (var i = 0; i < dept.length; i++) {
                        var selopt = new Option("select", "select");
                        $("#" + idval).append(selopt);
                        var opt = new Option(data[1].master_name, data[1].master_code);
                        //    var opt2 = new Option(value3[0].Dgroup_Name, value3[0].Dgroup_Id);

                        $("#" + idval).append(opt);
                        //     }
                        $("#" + idval).val($("#" + idval + " option").eq(1).val()).change();
                        ////$("#" + ee).data("kendoDropDownList").dataSource.data(data);
                        //$("#" + ee).data("kendoDropDownList").value(data[1].master_code);
                        ////$("#" + ee).data("kendoDropDownList").select(1)
                        // $("#" + ee).data("select").trigger("change");
                        //$("#Dept_Id").data("kendoDropDownList").refresh();
                    }
                    else {
                        var ee = data[0].parent_code;
                        //  $("#" + ee).data("kendoDropDownList").select(0)
                    }

                });
            }
        } catch (er) {
            hideProgress();
        }
    }
    var objDialog;
    var counter = 1;
    var countdata = [];
    $(document).ready(function () {
        loaddynamiccolumns();
        objDialog = $("[id$='ForPartialViewStorageAttribute']");
        objDialog.dialog({
            autoOpen: false,
            modal: true,
            width: 600,
            height: 350
        });

        //addrowsameas
        $("#addrowsameas").on("click", function () {
            debugger;
            var sameasdocnameid = $("#samesubcategory").val();
            if (sameasdocnameid == 0) {
                $.alert({
                    title: 'DMS',
                    content: 'Select Same as DocName.!',
                    type: 'blue',
                });
                return false;
            }

         //   var dpnm = $("#DeptID").val();
        //    var uname = $("#Unit").val();
            var docgroup = $("#Catgery").val();
            var docname = $("#subCatgery").val();

            if (docgroup == "0" || docname == "0") {
                $.alert({
                    title: 'DMS',
                    content: 'Select Dropdowns.!',
                    type: 'blue',
                });
                return false;
            }

            var retval = null;
            $.ajax({
                url: '@Url.Action("CheckStorageattribute", "StorageAttributes")',
                type: "POST",
                datatype: "json",
                async: false,
                data: { 'DgroupID': docgroup, 'DNameID': docname },
                success: function (data) {
                    retval = data;
                }
            });
            if (retval == "0") {
                $.ajax({
                    url: '@Url.Action("GetSameasAttributeplusdata", "StorageAttributes")',
                    type: "POST",
                    datatype: "json",
                    async: false,
                    data: { 'sameasdocnameid': sameasdocnameid },
                    success: function (data) {
                        debugger;
                        if (data.Data1 == "") {
                            $.alert({
                                title: 'DMS',
                                content: 'There is No Records.!',
                                type: 'blue',
                            });
                            return false;
                        }
                        else {
                            var data2 = JSON.parse(data.Data1);
                            for (i = 0; i < data2.length; i++) {
                                var newRow = $("<tr  width='100%'>");
                                var cols = "";
                                var radname = "mandatory" + counter;
                                var orderby = counter + 1;

                                cols += '<td style="display:none"><input type="hidden" class="nr" value=' + orderby + ' id="hddn' + orderby + '"/></td>';
                                cols += '<td style="padding-left:0px;width:50px;"><input style="width:50px; type="text" ; maxlength ="2"; value="' + orderby + '" name="name' + orderby + '" id="orderbyid' + orderby + '"   onkeypress="return isNumberKey(event)"/><span id="error" style="color: Red; display: none"><br/>* Special Characters not allowed</span></td>';
                                cols += '<td style="width:150px;"><input style="width:150px;"  type="text"  name="name' + orderby + '" id="name' + orderby + '"/></td>';
                                cols += '<td style="width:100px;"><select onchange="test(' + orderby + ')"  id="drpvalue' + orderby + '"><option value="0">Select Type</option><option value="Numeric">Numeric</option><option value="Alpha Numeric">Alpha Numeric</option><option value="Amount">Amount</option><option value="Datetime">Datetime</option><option value="Logical">Logical</option></select></td>';
                                cols += '<td style="width:200px;"><select  id="tdlov' + orderby + '" style="form-control;display:none;onkeypress = "return NumersOnly(event)""><option value="0">Select Master</option></select><input style="width:100%;"  type="text" onchange="test1()" style="width:60%;" onkeypress="return IsAlphaNumeric(event);" ondrop="return false;" name="Length' + orderby + '" id="Length' + orderby + '"/><span id="error" style="color: Red; display: none"><br/>* Special Characters not allowed</span></td>';
                                cols += '<td style="width:125px;"><input type="radio"  name="mandatory' + orderby + '" id="mandatory' + orderby + '" value="Y"/> &nbsp;&nbsp; Yes &nbsp;<input type="radio"  name="mandatory' + orderby + '" id="mandatory' + orderby + '" value="N"/>&nbsp;&nbsp;No</td>'
                                cols += '<td><button type="button" class="ibtnDel btn btn-md btn-danger " ><span class="glyphicon glyphicon-trash"></span></button></td>';
                                countdata.push(orderby);
                                newRow.append(cols);
                                $("table.order-list").append(newRow);
                                $('#orderbyid' + orderby).val(data2[i].Storage_orderid);
                                $("#name" + orderby).val(data2[i].Satr_Name);
                                $("#drpvalue" + orderby).val(data2[i].Satr_Type);
                                $("#Length" + orderby).val(data2[i].Satr_Length);
                                $('input:radio[name="mandatory' + orderby + '"][value=' + data2[i].Satr_Mandotry + ']').prop('checked', true);
                                counter++;
                                $("#counter").val(counter);
                            }
                        }
                    },
                    error: function () {
                        $.alert({
                            title: 'DMS',
                            content: 'Failed to create..!',
                            type: 'blue',
                        });
                        return false;
                    }
                });

            }
            else {
                $.alert({
                    title: 'DMS',
                    content: 'This combination of attributes is already available.!',
                    type: 'blue',
                });
                return false;
            }

        });


        /*------ */

        $("#addrow").on("click", function () {
            debugger;
         //   var dpnm = $("#DeptID").val();
         //   var uname = $("#Unit").val();
            var docgroup = $("#Catgery").val();
            var docname = $("#subCatgery").val();

            if ( docgroup == "0" || docname == "0") {
                $.alert({
                    title: 'DMS',
                    content: 'Select Dropdowns.!',
                    type: 'blue',
                });
                return false;
            }

            var retval = null;
            $.ajax({
                url: '@Url.Action("CheckStorageattribute", "StorageAttributes")',
                @*url: '@Url.Action("checkconfigattrib", "ConfigureAttributes")',*@
                type: "POST",
                datatype: "json",
                async: false,
                data: {  'DgroupID': docgroup, 'DNameID': docname },
                success: function (data) {

                    retval = data;
                }
            });

            if (retval == "0") {
                $("#btnsubmit").prop('disabled', false);
                var newRow = $("<tr  width='100%'>");
                var cols = "";
                var radname = "mandatory" + counter;

                var orderby = counter + 1;

                cols += '<td style="display:none"><input type="hidden" class="nr" value=' + orderby + ' id="hddn' + orderby + '"/></td>';
                cols += '<td style="padding-left:0px;width:50px;"><input style="width:50px; type="text" ; maxlength ="2"; value="' + orderby + '" name="name' + orderby + '" id="orderbyid' + orderby + '"   onkeypress="return isNumberKey(event)"/><span id="error" style="color: Red; display: none"><br/>* Special Characters not allowed</span></td>';
                cols += '<td style="width:150px;"><input style="width:150px;"  type="text"  name="name' + orderby + '" id="name' + orderby + '"/></td>';
                cols += '<td style="width:100px;"><select onchange="test(' + orderby + ')"  id="drpvalue' + orderby + '"><option value="0">Select Type</option><option value="Numeric">Numeric</option><option value="Alpha Numeric">Alpha Numeric</option><option value="Amount">Amount</option><option value="Datetime">Datetime</option><option value="Logical">Logical</option></select></td>';
                cols += '<td style="width:200px;"><select  id="tdlov' + orderby + '" style="form-control;display:none;onkeypress = "return NumersOnly(event)""><option value="0">Select Master</option></select><input style="width:100%;"  type="text" onchange="test1()" style="width:60%;" onkeypress="return IsAlphaNumeric(event);" ondrop="return false;" name="Length' + orderby + '" id="Length' + orderby + '"/><span id="error" style="color: Red; display: none"><br/>* Special Characters not allowed</span></td>';
                cols += '<td style="width:125px;"><input type="radio"  name="mandatory' + orderby + '" id="mandatory' + orderby + '" value="Y"/> &nbsp;&nbsp; Yes &nbsp;<input type="radio"  name="mandatory' + orderby + '" id="mandatory' + orderby + '" value="N"/>&nbsp;&nbsp;No</td>'
                cols += '<td><button type="button" class="ibtnDel btn btn-md btn-danger " ><span class="glyphicon glyphicon-trash"></span></button></td>';
                countdata.push(orderby);

                newRow.append(cols);
                $("table.order-list").append(newRow);
                counter++;
                $("#counter").val(counter);
            }
            else {
                $.alert({
                    title: 'DMS',
                    content: 'This combination of attributes is already available.!',
                    type: 'blue',
                });
                return false;
            }
        });

        $("table.order-list").on("click", ".ibtnDel", function (event) {
            //$(this).closest("tr").remove();
            var value = $(this).closest('tr').find('td:eq(0)');
            // alert(value);
            value = value.find(".nr").val();
            //  alert(value);
            if (value != counter) {
                value = value - 1;
            }
            countdata.splice(value, 1);
            $(this).closest("tr").remove();
            counter -= 1
            $("#counter").val(counter);
        });

        $("#btnsubmit").on("click", function () {
            debugger;
            if (counter == 0) {
                $.alert({
                    title: 'DMS',
                    content: 'Please add the attribute row.!',
                    type: 'blue',
                });
                $("#btnsubmit").prop('disabled', true);
                return false;
            }

        //    var dpnm = $("#DeptID").val();
         //   var uname = $("#Unit").val();
            var docgroup = $("#Catgery").val();
            var docname = $("#subCatgery").val();
            /*
            if (dpnm == 0) {
                $.alert({
                    title: 'DMS',
                    content: 'Select Department.!',
                    type: 'blue',
                });
                $("#erridmsg").show();
                return false;
            }
            if (uname == 0) {
                $.alert({
                    title: 'DMS',
                    content: 'Select Unit.!',
                    type: 'blue',
                });
                $("#erridmsg").show();
                return false;
            }
            */
            if (docgroup == 0) {
                $.alert({
                    title: 'DMS',
                    content: 'Select Doc Group.!',
                    type: 'blue',
                });
                $("#erridmsg").show();
                return false;
            } if (docname == 0) {
                $.alert({
                    title: 'DMS',
                    content: 'Select Doc Name.!',
                    type: 'blue',
                });
                $("#erridmsg").show();
                return false;
            }

            //Loop through the Table rows and build a JSON array.
         //   var DeptID = $("#DeptID").val();
         //   var UnitID = $("#Unit").val();
            var DgroupID = $("#Catgery").val();
            var DNameID = $("#subCatgery").val();
            var attributes1 = new Array();
            var attributes2 = new Array();
            var attributes3 = new Array();
            var attributes4 = new Array();
            var attributes5 = new Array();
            var z = 0;
            //alert(counter);
            for (j = 0; j < counter; j++) {
                var i = countdata[j];

                if ($("#name" + i).val() == "") {
                    $.alert({
                        title: 'DMS',
                        content: 'Please fill all the values in the attribute row/Delete the empty row - name.!',
                        type: 'blue',
                    });
                    return;
                }
                if ($("#drpvalue" + i).val() == "0") {
                    $.alert({
                        title: 'DMS',
                        content: 'Please fill all the values in the attribute row/Delete the empty row - drp.!',
                        type: 'blue',
                    });
                    return;
                }

                if ($("#drpvalue" + i).val() == "Alpha Numeric") {
                    if ($("#Length" + i).val() == "0") {
                        $.alert({
                            title: 'DMS',
                            content: 'enter the length greater then zero.!',
                            type: 'blue',
                        });
                        document.getElementById(ctrl.id).value = "";
                        return;
                    }
                }
                var Check = $("#drpvalue" + i).val();
                if (Check == "Alpha Numeric") {
                    if ($("#Length" + i).val() == "") {
                        $.alert({
                            title: 'DMS',
                            content: 'Please fill all the values in the attribute row/Delete the empty row - length.!',
                            type: 'blue',
                        });
                        return;
                    }
                }

                if ($('input[id=mandatory' + i + ']:checked').val() == undefined) {
                    $.alert({
                        title: 'DMS',
                        content: 'Please fill all the values in the attribute row/Delete the empty row - mandatory.!',
                        type: 'blue',
                    });
                    return;
                }
                //}


                debugger;
                if (counter < $("#orderbyid" + i).val()) {
                    alert('orderby should not exeed ' + counter);
                    return false;
                }
                var attribute = [];
                attributes1[z] = $("#name" + i).val();
                attributes2[z] = $("#drpvalue" + i).val();
                attributes3[z] = $("#Length" + i).val();
                attributes4[z] = $('input[id=mandatory' + i + ']:checked').val();
                //attributes5[z] = $("#tdlov" + i).val();
                attributes5[z] = $("#orderbyid" + i).val();
                z++;
            }



            //for (i = 0; i < counter; i++) {
            //    var attribute = {};
            //    attributes1[i] = $("#name" + i).val();
            //    attributes2[i] = $("#drpvalue" + i).val();
            //    attributes3[i] = $("#Length" + i).val();
            //    attributes4[i] = $('input[id=mandatory' + i + ']:checked').val();

            //}


            var sorted_arr = attributes5.sort();
            debugger;
            var results = [];
            var duplicate = "false";
            for (var i = 0; i < attributes5.length - 1; i++) {
                if (sorted_arr[i + 1] == sorted_arr[i]) {
                    results.push(sorted_arr[i]);
                    duplicate = "true";
                }
            }

            var uniqueNames = [];
            $.each(results, function (i, el) {
                if ($.inArray(el, uniqueNames) === -1) uniqueNames.push(el);
            });

            if (duplicate == "true") {
                $.alert({
                    title: 'DMS',
                    content: 'Duplicate Values:' + uniqueNames,
                    type: 'green',
                });
                return false;
            }

            else {
                $.ajax({

                    contentType: "application/json;charset=utf-8",
                    url: "../StorageAttributes/Save",
                    type: "POST",
                    dataType: "json",
                    data: '{"DgroupID":"' + DgroupID + '","DNameID":"' + DNameID + '","attributes1":"' + attributes1 + '","attributes2":"' + attributes2 + '","attributes3":"' + attributes3 + '","attributes4":"' + attributes4 + '","attributes5":"' + attributes5 + '"}',
                    success: function (data) {
                        debugger;
                        if (data.success == 1) {
                            debugger;// if true (1)
                            $.alert({
                                title: 'DMS',
                                content: 'Attributes are saved successfully.!',
                                type: 'green',
                            });
                            setTimeout(function () {// wait for 5 secs(2)
                                location.reload(); // then reload the page.(3)
                            }, 2500);
                        }
                    }

                });
            }
        });
    });

    function loaddynamiccolumns() {
        try {
            $.ajax({
                type: "POST",
                contentType: "application/json; charset=utf-8",
                async: false,
                url: '@Url.Action("getlabellist", "DocGroupMaster")',
                data: "{}",
                success: function (data) {
                    debugger;
                    // var orglevelcode1 = data[0].orghierarchy_code;
                    maxorglvl = data.length;
                 //   alert(maxorglvl);
                    if (data.length >= 1) {
                        orglevelcode1 = data[0].orghierarchy_code;
                        var org1val = data[0].orghierarchy_name;
                        if (orglevelcode1 != null && orglevelcode1 != "" && orglevelcode1 != "undefined") {
                            $("#orglvl1lbl").text(org1val);
                            //orglevelval1 = $("#" + orglevelcode1).val();
                            $("#orgcol1").show()

                            $.ajax({
                                url: '@Url.Action("DocGroupNames", "ConfigureAttributes")',
                                type: "GET",
                                data: { 'parentcode': orglevelcode1, "dependcode": "" },
                                success: function (data) {

                                    for (var i = 0; i < data.length; i++) {
                                        var opt = new Option(data[i].master_name, data[i].master_code);
                                        //    var opt2 = new Option(data[0].Dname_Name, data[0].Dname_Id);
                                        $('#orglvl1val').append(opt);

                                        //$("#sdocname").find('option').each(function (i, opt) {

                                        //    // if (opt.value === Draft)
                                        //    $(opt2).attr('selected', 'selected');
                                        //});

                                    }
                                }
                            });
                        }

                    }
                    if (data.length >= 2) {
                        orglevelcode2 = data[1].orghierarchy_code;
                        var org1va2 = data[1].orghierarchy_name;
                        if (orglevelcode2 != null && orglevelcode2 != "" && orglevelcode2 != "undefined") {
                            $("#orglvl2lbl").text(org1va2);
                            //   orglevelval2 = $("#" + orglevelcode2).val();
                            $("#orgcol2").show();

                            $.ajax({
                                url: '@Url.Action("DocGroupNames", "ConfigureAttributes")',
                                type: "GET",
                                data: { 'parentcode': orglevelcode2, "dependcode": "" },
                                success: function (data) {

                                    for (var i = 0; i < data.length; i++) {
                                        var opt = new Option(data[i].master_name, data[i].master_code);
                                        //    var opt2 = new Option(data[0].Dname_Name, data[0].Dname_Id);
                                        $('#orglvl2val').append(opt);

                                        //$("#sdocname").find('option').each(function (i, opt) {

                                        //    // if (opt.value === Draft)
                                        //    $(opt2).attr('selected', 'selected');
                                        //});

                                    }
                                }
                            });
                        }
                    }
                    if (data.length >= 3) {
                        orglevelcode3 = data[2].orghierarchy_code;
                        var org1va3 = data[2].orghierarchy_name;
                        if (orglevelcode3 != null && orglevelcode3 != "" && orglevelcode3 != "undefined") {
                            $("#orglvl3lbl").text(org1va3);
                            // orglevelval3 = $("#" + orglevelcode3).val();
                            $("#orgcol3").show();

                            $.ajax({
                                url: '@Url.Action("DocGroupNames", "ConfigureAttributes")',
                                type: "GET",
                                data: { 'parentcode': orglevelcode3, "dependcode": "" },
                                success: function (data) {

                                    for (var i = 0; i < data.length; i++) {
                                        var opt = new Option(data[i].master_name, data[i].master_code);
                                        //    var opt2 = new Option(data[0].Dname_Name, data[0].Dname_Id);
                                        $('#orglvl3val').append(opt);

                                        //$("#sdocname").find('option').each(function (i, opt) {

                                        //    // if (opt.value === Draft)
                                        //    $(opt2).attr('selected', 'selected');
                                        //});

                                    }
                                }
                            });
                        }
                    }
                    if (data.length == 4) {
                        orglevelcode4 = data[3].orghierarchy_code;
                        var org1va4 = data[3].orghierarchy_name;
                        if (orglevelcode4 != null && orglevelcode4 != "" && orglevelcode4 != "undefined") {
                            $("#orglvl4lbl").text(org1va4);
                            //orglevelval4 = $("#" + orglevelcode4).val();
                            $("#orgcol4").show();

                            $.ajax({
                                url: '@Url.Action("DocGroupNames", "ConfigureAttributes")',
                                type: "GET",
                                data: { 'parentcode': orglevelcode4, "dependcode": "" },
                                success: function (data) {

                                    for (var i = 0; i < data.length; i++) {
                                        var opt = new Option(data[i].master_name, data[i].master_code);
                                        //    var opt2 = new Option(data[0].Dname_Name, data[0].Dname_Id);
                                        $('#orglvl4val').append(opt);

                                        //$("#sdocname").find('option').each(function (i, opt) {

                                        //    // if (opt.value === Draft)
                                        //    $(opt2).attr('selected', 'selected');
                                        //});

                                    }
                                }
                            });
                        }
                    }


                    // alert(orglevelcode1);
                    //setTimeout(function () {
                    //    window.location.reload(1);
                    //}, 2500);
                },
            });
        } catch (er) {
            alert(er);
        }
    }

    function Storageattributeview() {
        debugger;
        var sameasdocnameid = $("#samesubcategory").val();
        if (sameasdocnameid == 0) {
            $.alert({
                title: 'DMS',
                content: 'Select Same as DocName.!',
                type: 'blue',
            });
            //$("#erridmsg").show();
            //objDialog.dialog("Close");
            return false;
        }
        else {
            $.ajax({
                url: '@Url.Action("GetSameasattributesdata", "StorageAttributes")',
                type: "POST",
                datatype: "json",
                async: false,
                data: { 'sameasdocnameid': sameasdocnameid },
                success: function (data) {
                    debugger;
                    var counter = data.count;
                    if (counter != 0) {
                        objDialog.load('../StorageAttributes/ViewPartialViewEdit?sameasdocnameid=' + sameasdocnameid);
                        objDialog.dialog({ title: 'View' });
                        objDialog.dialog("open");
                    }
                    else {
                        $.alert({
                            title: 'DMS',
                            content: 'There is no storage attributes found..!',
                            type: 'blue',
                        });
                        return false;
                    }
                },
                error: function () {
                    $.alert({
                        title: 'DMS',
                        content: 'Some error has occured..!',
                        type: 'red',
                    });
                    return false;
                }
            });
        }
    }



</script>


<script>

    $(document).ready(function () {
        debugger;
        @*var custid = 0;
        var type = "department";
        var actiontype = "GetAll";
        $.ajax({
            url: '@Url.Action("DepartmentEdit", "ConfigureAttributes")',
            type: "GET",
            datatype: "json",
            data: { 'custid': custid, "type": type, "actiontype": actiontype },
            success: function (data) {
                for (var i = 0; i < data.length; i++) {

                    var opt = new Option(data[i].Dept_Name, data[i].Dept_Id);
                    var opt2 = new Option(data[0].Dept_Name, data[0].Dept_Id);
                    $('#DeptID').append(opt);
                    $("#DeptID").find('option').each(function (i, opt) {
                        $(opt2).attr('selected', 'selected');

                    });
                }
            }
        });

        var custid = 0;
        var type = "unit";
        var actiontype = "GetAll";
        $.ajax({
            url: '@Url.Action("DepartmentEdit", "ConfigureAttributes")',
            type: "GET",
            data: { 'custid': custid, "type": type, "actiontype": actiontype },
            success: function (data) {

                for (var i = 0; i < data.length; i++) {
                    var opt = new Option(data[i].unit_name, data[i].unit_id);
                    var opt2 = new Option(data[0].unit_name, data[0].unit_id);
                    $('#Unit').append(opt);

                    $("#Unit").find('option').each(function (i, opt) {

                        // if (opt.value === Draft)
                        $(opt2).attr('selected', 'selected');
                    });

                }
            }
        });*@


        var custid = 0;
        var type = "CateGory";
        var actiontype = "GetAll";
        $.ajax({
            url: '@Url.Action("DepartmentEdit", "ConfigureAttributes")',
            type: "GET",
            data: { 'custid': custid, "type": type, "actiontype": actiontype },
            success: function (data) {

                for (var i = 0; i < data.length; i++) {
                    var opt = new Option(data[i].Dgroup_Name, data[i].Dgroup_Id);
                    var opt2 = new Option(data[0].Dgroup_Name, data[0].Dgroup_Id);
                    $('#Catgery').append(opt);

                    $("#Catgery").find('option').each(function (i, opt) {

                        // if (opt.value === Draft)
                        $(opt2).attr('selected', 'selected');
                    });

                }
            }
        });

        var custid = 0;
        var type = "SubCateGory";
        var actiontype = "GetAll";
        $.ajax({
            url: '@Url.Action("DepartmentEdit", "ConfigureAttributes")',
            type: "GET",
            data: { 'custid': custid, "type": type, "actiontype": actiontype },
            success: function (data) {

                for (var i = 0; i < data.length; i++) {
                    var opt = new Option(data[i].Dname_Name, data[i].Dname_Id);
                    var opt2 = new Option(data[0].Dname_Name, data[0].Dname_Id);
                    $('#subCatgery').append(opt);
                    // $('#samesubcategory').append(opt);
                    $("#subCatgery").find('option').each(function (i, opt) {

                        // if (opt.value === Draft)
                        $(opt2).attr('selected', 'selected');
                    });

                }
            }
        });


        //for sameas subcategory
        var custid = 0;
        var type = "SubCateGory";
        var actiontype = "GetAll";
        $.ajax({
            url: '@Url.Action("DepartmentEdit", "ConfigureAttributes")',
            type: "GET",
            data: { 'custid': custid, "type": type, "actiontype": actiontype },
            success: function (data) {

                for (var i = 0; i < data.length; i++) {
                    var opt = new Option(data[i].Dname_Name, data[i].Dname_Id);
                    var opt2 = new Option(data[0].Dname_Name, data[0].Dname_Id);

                    $('#samesubcategory').append(opt);
                    $("#subCatgery").find('option').each(function (i, opt) {

                        // if (opt.value === Draft)
                        $(opt2).attr('selected', 'selected');
                    });

                }
            }
        });


    });

</script>

<script>

    function fetchDocGroup() {
        debugger;
        var DocGroupID = $("#Catgery").val();
        if (DocGroupID == "" || DocGroupID == null || DocGroupID == "undefined" || DocGroupID == 0) {
            return false;
        }

        else {
            $.ajax({

                type: "GET",

                contentType: "application/json; charset=utf-8",
                dataType: "json",
                url: '@Url.Action("GetDocGroup", "ConfigureAttributes")',

                data: { 'DocGroupID': DocGroupID },
                success: function (data) {
                    debugger;
                    var value1 = data.Get_dept2;
                    var value2 = data.Get_Orglevel;
                    var value3 = data.Get_docname2;

                    var length1 = value1.length;
                //    var length2 = value2.length;
                    var length3 = value3.length;

                  //  var CheckDeptId = $("#DeptID").val();
                  ////  if (CheckDeptId == "0") {
                  //      $('#DeptID').empty();
                  //      for (var i = 0; i < value1.length; i++) {
                  //          var opt = new Option(value1[i].Dept_Name, value1[i].Dept_Id);
                  //          var opt2 = new Option(value1[0].Dept_Name, value1[0].Dept_Id);

                  //          $('#DeptID').append(opt);
                  //      }
                  //      if (length1 == 2) {
                  //          $("#DeptID").val($("#DeptID option").eq(1).val());
                  //      }
                  ////  }

                  //  var CheckUnitId = $("#Unit").val();
                  // // if (CheckUnitId == "0") {
                  //      $('#Unit').empty();
                  //      for (var i = 0; i < value2.length; i++) {
                  //          var opt = new Option(value2[i].unit_name, value2[i].unit_id);
                  //          var opt2 = new Option(value2[0].unit_name, value2[0].unit_id);

                  //          $('#Unit').append(opt);
                  //      }
                  //      if (length2 == 2) {
                  //          $("#Unit").val($("#Unit option").eq(1).val());
                  //      }
                  // // }

                    var CheckDocNameId = $("#subCatgery").val();
                   // if (CheckDocNameId == "0") {
                        $('#subCatgery').empty();
                        for (var i = 0; i < value3.length; i++) {
                            var opt = new Option(value3[i].Dname_Name, value3[i].Dname_Id);
                            var opt2 = new Option(value3[0].Dname_Name, value3[0].Dname_Id);

                            $('#subCatgery').append(opt);
                        }
                        if (length3 == 2) {
                            $("#subCatgery").val($("#subCatgery option").eq(1).val());
                        }
                   // }

                }
            });
        }
    }



    function fetchDocName() {
        debugger;
        var DocNameId = $("#subCatgery").val();
        if (DocNameId == "" || DocNameId == null || DocNameId == "undefined" || DocNameId == 0) {
            return false;
        }

        else {
            $.ajax({
                type: "GET",

                contentType: "application/json; charset=utf-8",
                dataType: "json",
                url: '@Url.Action("GetDocName", "ConfigureAttributes")',

                data: { 'DocNameId': DocNameId },
                success: function (data) {

                    debugger;
                    var value1 = data.Get_dept3;
                    var value2 = data.Get_Orglevel;
                    var value3 = data.Get_docgroup3;

                    var length1 = value1.length;
                    var length2 = value2.length;
                    var length3 = value3.length;

               
                    var CheckDocGroupId = $("#Catgery").val();
                    //if (CheckDocGroupId == "0") {
                    $('#Catgery').empty();
                    for (var i = 0; i < value3.length; i++) {
                        var opt = new Option(value3[i].Dgroup_Name, value3[i].Dgroup_Id);
                        var opt2 = new Option(value3[0].Dgroup_Name, value3[0].Dgroup_Id);

                        $('#Catgery').append(opt);
                    }
                    if (length3 == 2) {
                        $("#Catgery").val($("#Catgery option").eq(1).val());
                    }

                    if (length2 == 2) {
                        //  $("#QCD_mst_tHR").val($("#QCD_mst_tHR option").eq(1).val());
                        //var MaxorglevelPos = $("#MaxorglevelPos").val();
                        //var orglevel3 = $("#orglevel" + MaxorglevelPos).val();
                        //$("#" + orglevel3).data("kendoDropDownList").value(value2[1].master_code);
                        //var dropDownList = $("#" + orglevel3).getKendoDropDownList();
                        //dropDownList.trigger("change");
                        var orglvlid = "";
                        if (maxorglvl == 4) {
                            orglvlid = "orglvl4val";
                        } else if (maxorglvl == 3) {
                            orglvlid = "orglvl3val";
                        } else if (maxorglvl == 2) {
                            orglvlid = "orglvl2val";
                        } else if (maxorglvl == 1) {
                            orglvlid = "orglvl1val";
                        }


                        $("#" + orglvlid).empty();
                        var optsel = new Option("select", "select");

                        $("#" + orglvlid).append(optsel);
                        var opt = new Option(value2[1].master_name, value2[1].master_code);

                        $("#" + orglvlid).append(opt);
                        $("#" + orglvlid).val($("#" + orglvlid + " option").eq(1).val()).change();
                    }

                    //}

                }
            });
        }
    }

</script>

<script type="text/javascript">
    var counter = 0;
    var specialKeys = new Array();
    specialKeys.push(8); //Backspace
    specialKeys.push(9); //Tab
    specialKeys.push(46); //Delete
    specialKeys.push(36); //Home
    specialKeys.push(35); //End
    specialKeys.push(37); //Left
    specialKeys.push(39); //Right
    function IsAlphaNumeric(e) {
        var keyCode = e.keyCode == 0 ? e.charCode : e.keyCode;
        var ret = ((keyCode >= 48 && keyCode <= 57) || (keyCode >= 65 && keyCode <= 90) || (keyCode >= 97 && keyCode <= 122) || (specialKeys.indexOf(e.keyCode) != -1 && e.charCode != e.keyCode));
        document.getElementById("error").style.display = ret ? "none" : "inline";
        return ret;
    }

    function isNumber(evt, ctrl) {
        $(ctrl).val($(ctrl).val().replace(/[^\d].+/, ""));
        if ((evt.which < 48 || evt.which > 57)) {
            evt.preventDefault();
        }
    }

    function myFunction(ctrl) {
        var x = document.getElementById(ctrl.id).value;
        if (x <= 0) {
            $.alert({
                title: 'DMS',
                content: 'Enter greater than zero.!',
                type: 'green',
            });
            document.getElementById(ctrl.id).value = "";

        }
    }

    function NumersOnly(evt) {
        debugger;
        if (evt.keyCode == '9' || evt.keyCode == '16') {
            return;
        }
        evt.keyCode
        var code;
        if (evt.keyCode) code = evt.keyCode;
        else if (evt.which) code = evt.which;
        if (evt.which == 46)
            return false;
        if (code == 8 || code == 46)
            return true;
        if (code < 48 || code > 57)
            return false;
    }

    function test(SeltVal) {
        debugger;
        var lovname;
        //var counter = 0;
        for (i = 1; i < counter + 1; i++) {
            var type = $("#drpvalue" + i).val();
            if (type == "Alpha Numeric") {
                $("#Length" + i).val("500");
                //$("#Length" + i).prop("readonly").disabled = false;
                $("#Length" + i).prop("readonly", false);
                $("#tdlov" + SeltVal).css('display', 'none');
                $("#Length" + SeltVal).css('display', 'inline');
            }
            if (type == "Numeric") {
                $("#Length" + i).val("0");
                $("#Length" + i).prop("readonly", true);
                $("#tdlov" + SeltVal).css('display', 'none');
                $("#Length" + SeltVal).css('display', 'inline');
            }
            if (type == "Datetime") {
                //$("#Length" + i).prop("readonly").value = "0";
                $("#Length" + i).val("0");
                $("#Length" + i).prop("readonly", true);
                $("#tdlov" + SeltVal).css('display', 'none');
                $("#Length" + SeltVal).css('display', 'inline');
            }
            if (type == "Amount") {
                $("#Length" + i).val("0");
                $("#Length" + i).prop("readonly", true);
                $("#tdlov" + SeltVal).css('display', 'none');
                $("#Length" + SeltVal).css('display', 'inline');
            }

            if (type == "Logical") {
                $("#Length" + i).val("0");
                $("#Length" + i).prop("readonly", true);
                $("#tdlov" + SeltVal).css('display', 'none');
                $("#Length" + SeltVal).css('display', 'inline');
            }
        }
        //var seltvaltxt = $("#drpvalue" + SeltVal + ' :selected').text();
        //if (seltvaltxt == "Lov Name") {
        //    $("#tdlov" + SeltVal).css('display', 'inline');
        //    $("#Length" + SeltVal).css('display', 'none');
        //}
    }

    function sameastest(SeltVal) {
        debugger;
        var lovname;
        //var counter = 0;
        for (i = 1; i < counter + 1; i++) {
            var type = $("#type" + i).val();
            if (type == "Alpha Numeric") {
                $("#len" + i).val("500");

                $("#len" + i).prop("readonly", false);
                //  $("#tdlov" + SeltVal).css('display', 'none');
                $("#len" + SeltVal).css('display', 'inline');
            }
            if (type == "Numeric") {
                $("#len" + i).val("0");
                $("#len" + i).prop("readonly", true);
                //  $("#tdlov" + SeltVal).css('display', 'none');
                $("#len" + SeltVal).css('display', 'inline');
            }
            if (type == "Datetime") {
                //$("#Length" + i).prop("readonly").value = "0";
                $("#len" + i).val("0");
                $("#len" + i).prop("readonly", true);
                //$("#tdlov" + SeltVal).css('display', 'none');
                $("#len" + SeltVal).css('display', 'inline');
            }
            if (type == "Amount") {
                $("#len" + i).val("0");
                $("#len" + i).prop("readonly", true);
                //$("#tdlov" + SeltVal).css('display', 'none');
                $("#len" + SeltVal).css('display', 'inline');
            }

            if (type == "Logical") {
                $("#Length" + i).val("0");
                $("#Length" + i).prop("readonly", true);
                $("#tdlov" + SeltVal).css('display', 'none');
                $("#Length" + SeltVal).css('display', 'inline');
            }
        }

    }

    function test1() {
        debugger;
        // var counter = 0;
        for (i = 0; i < counter; i++) {
            var txtlenval = $("#Length" + i).val()
            if (txtlenval > 500) {
                $.alert({
                    title: 'DMS',
                    content: 'The given string length should not be greater than 500.!',
                    type: 'blue',
                });
            }
        }
    }
</script>
<script>
    function btnview() {
        debugger;
        var url = '@Url.Action("ViewStorageAttributes", "ViewStorageAttributes")'
        window.location.href = url;
    }
</script>