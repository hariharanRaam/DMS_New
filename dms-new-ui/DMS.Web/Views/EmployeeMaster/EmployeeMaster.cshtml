@using Kendo.Mvc.UI;
@using Kendo.Mvc.UI.Fluent;
@using Kendo.Mvc.Extensions;
@using Kendo.Mvc.Resources;
@model  DMS.Model.EmployeeMaster_Model

<!Doctype html>
<html>
<head>
    <title></title>
    <style>
          .k-dropdown-wrap.k-state-default {
        background-clip: padding-box;
        display: block;
        width: initial;
        height: 18px;
        padding: 0.4375rem 1.875rem 0.4375rem 0.875rem;
        -moz-padding-start: calc(0.875rem - 3px);
        font-size: 0.7375rem;
        font-weight: 400;
        line-height: 1.53;
        color: #697a8d;
        background-color: #fff;
        background-repeat: no-repeat;
        background-position: right 0.875rem center;
        background-size: 17px 12px;
        border: 1px solid #d9dee3;
        border-radius: 0.375rem;
        transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
        -webkit-appearance: none;
        -moz-appearance: none;
        appearance: none;
    }

    .k-input {
        font-size: 0.7375rem;
    }

    .k-icon {
        background-color: #fff;
        background-image: url(../Assets/images/dropdownarrow.png);
        background-repeat: no-repeat;
        position: relative;
        top: 8px;
        right: 2px;
    }

    .k-popup.k-list-container /*, .k-popup.k-calendar-container*/ {
        padding: 0px;
        border-width: 0px;
        border-style: none;
    }

    .k-list .k-state-hover {
        border-radius: 0px;
    }

    .k-popup .k-list .k-state-focused, .k-popup .k-list .k-state-selected {
        background-color: #007bff;
        border-style: none;
    }

    .k-list .k-state-hover, .k-list .k-state-focused, .k-list .k-state-highlight, .k-list .k-state-selected, .k-fieldselector .k-list .k-item, .k-list-optionlabel, .k-dropzone {
        border-radius: 0px;
    }

    .k-i-arrow-s {
        background-position: 0 !important;
    }

    .k-item {
        font-size: 0.7375rem;
        background-color: #fff;
        background-position: right 0.875rem center;
        color: #697a8d;
    }

    .k-popup .k-list .k-state-hover {
        padding: 0px;
        border-width: 0px;
        border-style: none;
    }

    .k-list > .k-state-hover {
        color: #fff;
        background-color: #007bff;
        border-color: transparent;
    }
    /*li.k-item {

    }*/

    .k-content {
        width: 100%;
    }

    .k-button {
        background-color: transparent;
        color: blue;
        border: aliceblue;
    }

    .k-grid {
        color: #697a8d;
        background-color: #fff;
    }

    .k-header {
        background-color: #fff;
    }

    .k-footer {
        background-color: #fff;
    }

    .k-widget {
        background-color: #fff;
    }
    .k-dropdown .k-state-hover .k-input {
    color: #697a8d;
}
     .k-dropdown .k-input {
    color: #697a8d;
}
        .k-dropdown-wrap .k-input {
        
            padding: 0.1em 0px;
        }


    </style>
</head>
<body class="hold-transition skin-blue sidebar-mini fixed">
    <div class="content-wrapper">
        <div class="container-xxl flex-grow-1 container-p-y">
            <div class="card-body" style="margin-top:-9px;">
                <h5 class="mobile-card-header">Trainer Master</h5>
                <form id="formAccountSettings" method="POST" onsubmit="return false">
                    <div class="row" id="header">
                        <div class="mb-3 col-md-5">
                            <div class="row">
                                <div class="mb-3 col-md-4">
                                    <select onchange="mode_change(this)" id="mode" class="form-select">
                                        <option value="I" selected>Create</option>
                                        <option value="U">Modify</option>
                                        <option value="V">View</option>
                                    </select>
                                </div>
                                <div class="mb-3 col-md-4">
                                    <input class="form-control"
                                           type="text"
                                           id="user_id"
                                           name="user_id"
                                           value="@Model.EmployeeID"
                                           readonly
                                           style="text-align:center" />
                                </div>
                                <div class="mb-3 col-md-4">
                                    <input class="form-control"
                                           type="text"
                                           id="user_stat"
                                           name="user_stat"
                                           value="@Model.Status"
                                           readonly
                                           style="text-align:center" />
                                </div>
                            </div>
                        </div>
                        <div class="mb-3 col-md-5">
                        </div>
                        <div class="mb-3 col-md-2">

                        </div>
                    </div>

                    <div class="row">
                        <div class="col-sm-3" style="width:23.5%">
                            <label class="form-label" for="EmpName">User Name&nbsp;<span style="font-size: 12px;color: red;font-weight: bold;">*</span></label>
                            <div class="input-group input-group-merge" id="user_div">
                                 @if (ViewBag.mode == "V")
                                 {
                                      @Html.TextBoxFor(model => model.EmployeeName, new { @class = "form-control", @id = "EmpName", @disabled = true })
                           @Html.ValidationMessageFor(model => model.EmployeeName)
                                 }
                                 else { 
                                 @Html.TextBoxFor(model => model.EmployeeName, new { @class="form-control" , @id = "EmpName" })
                           @Html.ValidationMessageFor(model => model.EmployeeName)
                                 }
                                <span class="input-group-text" id="user_search" hidden>
                                    <i data-bs-toggle="modal" data-bs-target="#usersearch" class="bx bx-search cursor-pointer"></i>
                                </span>
                            </div>
                        </div>
                        <div class="col-sm-3" style="width:23.5%">
                            <label class="form-label" for="EmpMob">Mobile No.&nbsp;<span style="font-size: 12px;color: red;font-weight: bold;">*</span></label>
                            @if (ViewBag.mode == "V")
                            {
                                @Html.EditorFor(model => model.MobileNo, new { htmlAttributes = new { @class = "form-control", id = "EmpMob", maxlength = "10", @disabled = true } })
                            }
                            else
                            {
                                @Html.EditorFor(model => model.MobileNo, new { htmlAttributes = new { @class = "form-control", id = "EmpMob", maxlength = "10" } })
                            }
                            @Html.ValidationMessageFor(model => model.MobileNo)
                        </div>
                        <div class="col-sm-3" style="width:23.5%">
                            <label class="form-label" for="userid">User Id&nbsp;<span style="font-size: 12px;color: red;font-weight: bold;">*</span></label>&nbsp;
                            @if (ViewBag.mode == "V")
                            {
                                @Html.TextBoxFor(model => model.EmployeeCode, new { @class = "form-control", @id = "userid", @disabled = true })
                            }
                            else
                            {
                                @Html.TextBoxFor(model => model.EmployeeCode, new { @class = "form-control", @id = "userid" })
                            }
                            @Html.ValidationMessageFor(model => model.EmployeeCode)
                        </div>
                        <div class="col-sm-3" style="width:23.5%">
                            <label class="form-label" for="EmpMail">eMail ID&nbsp;<span style="font-size: 12px;color: red;font-weight: bold;">*</span></label>
                            @if (ViewBag.mode == "V")
                            {
                                @Html.TextBoxFor(model => model.EmailID, new { @class = "form-control", id = "EmpMail", @disabled = true })
                            }
                            else
                            {
                                @Html.TextBoxFor(model => model.EmailID, new { @class = "form-control", id = "EmpMail" })
                            }
                            @Html.ValidationMessageFor(model => model.EmailID)
                        </div>
                    </div>
                    <div class="row" style="margin-top:10px;">
                        <div class="col-sm-3" style="width:23.5%">
                            <label class="form-label" for="Password">Password&nbsp;<span style="font-size: 12px;color: red;font-weight: bold;">*</span></label>
                            @if (ViewBag.mode == "V") {
                                @Html.TextBoxFor(model => model.Password, new { @class = "form-control make-pass", @id = "Password", @disabled = true })
                            }
                            else { 
                             @Html.TextBoxFor(model => model.Password, new { @class = "form-control make-pass", @id = "Password" })
                            }
                            @Html.ValidationMessageFor(model => model.Password)
                        </div>
                        <div class="col-sm-3" style="width:23.5%">
                            <label class="form-label" for="UserGroupID">Role&nbsp;<span style="font-size: 12px;color: red;font-weight: bold;">*</span></label>
                            <div>
                                @if (ViewBag.mode == "V")
                                {
                                    @(Html.Kendo().DropDownList()
                                    .Name("UserGroupID")
                                    .DataTextField("UserGroup")
                                    .DataValueField("UserGroupID")
                                    .HtmlAttributes(new { style = "width:100%;" })
                                    .DataSource(source => { source.Read(read => { read.Action("GetEmployeeNames", "EmployeeMaster", new { CommonVal = "UG" }); }).ServerFiltering(true); }))
                                }
                                else
                                {
                                    @(Html.Kendo().DropDownList()
                                    .Name("UserGroupID")
                                    .DataTextField("UserGroup")
                                    .DataValueField("UserGroupID")
                                    .HtmlAttributes(new { style = "width:100%;" })
                                    .DataSource(source => { source.Read(read => { read.Action("GetEmployeeNames", "EmployeeMaster", new { CommonVal = "UG" }); }).ServerFiltering(true); }))
                                }
                                @Html.ValidationMessageFor(model => model.UserGroupID)
                            </div>
                        </div>
                        @Html.Partial("BindOrgLevels", new DMS.Model.DocGroupMaster_Model())
                    </div>
                        <hr style="margin-top: 10px;margin-bottom: 7px;">
                        <div style="margin-bottom:-14px;">
                            <center>
                                @if (ViewBag.mode != "V")
                                {
                                     <button type="submit" class="btn btn-sm btn-primary me-2" id="btn_save" onclick="SaveEmpMaster()">Save</button>
                                }
                                <button type="reset" class="btn btn-sm btn-danger me-2">Cancel</button>
                            </center>
                        </div>
</form>
            </div>
        </div>
    </div>
</body>
</html>

<script type="text/javascript">
    var orglevelcode1 = "";
    var orglevelcode2 = "";
    var orglevelcode3 = "";
    var orglevelcode4 = "";
    var maxorglvl = 0;
    var modeval = "I";
    var empid = "";
    var slno = 0;
    function loaddynamiccolumns() {
        try {
            $.ajax({
                type: "POST",
                contentType: "application/json; charset=utf-8",
                async: false,
                url: '@Url.Action("getlabellist", "DocGroupMaster")',
                data: "{}",
                success: function (data) {
                    debugger;
                    maxorglvl = data.length;
                    // var orglevelcode1 = data[0].orghierarchy_code;
                    if (data.length >= 1) {
                        orglevelcode1 = data[0].orghierarchy_code;
                        // orglevelval1 = $("#" + orglevelcode1).val();
                    }
                    if (data.length >= 2) {
                        orglevelcode2 = data[1].orghierarchy_code;
                        // orglevelval2 = $("#" + orglevelcode2).val();
                    }
                    if (data.length >= 3) {
                        orglevelcode3 = data[2].orghierarchy_code;
                        //orglevelval3 = $("#" + orglevelcode3).val();
                    }
                    if (data.length == 4) {
                        orglevelcode4 = data[3].orghierarchy_code;
                        //orglevelval4 = $("#" + orglevelcode4).val();
                    }


                    // alert(orglevelcode1);
                    //setTimeout(function () {
                    //    window.location.reload(1);
                    //}, 2500);
                },
            });
        } catch (er) {
           // alert(er);
        }
    }
    function error_handler(e) {
        if (e.errors) {
            var message = "Errors:\n";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "\n";
                    });
                }
            });
            $.alert({
                title: 'DMS',
                content: message,
                type: 'red',
            });
        }
    }

    $(document).ready(function () {
        debugger;
        $(".make-pass").attr("type", "password");
        $("navhead").text("User");
        loaddynamiccolumns();
        if ("@ViewBag.mode" == null || "@ViewBag.mode" == "" || "@ViewBag.mode" == "undefined" || "@ViewBag.mode" == "null") {
            modeval = "I";
        } else {
            modeval = "@ViewBag.mode";
        }
        $("#mode").val(modeval);
        if (modeval != "I") {
            $('#user_search').removeAttr('hidden');

            var orglvlval = "@Model.OrgLevelMax";
            var orglvlvalues = orglvlval.split(',');
          //  alert(orglvlvalues.length);
            if (orglvlvalues.length == 4) {
                $("#" + orglevelcode4).data("kendoDropDownList").value(orglvlvalues[3]);
                $("#" + orglevelcode4).data("kendoDropDownList").trigger("change");
            } else if (orglvlvalues.length == 3) {
            //    alert(orglevelcode3);
              //   alert(orglvlvalues[2]);
                $("#" + orglevelcode3).data("kendoDropDownList").value(orglvlvalues[2]);
                $("#" + orglevelcode3).data("kendoDropDownList").trigger("change");
            } else if (orglvlvalues.length == 2) {
                $("#" + orglevelcode2).data("kendoDropDownList").value(orglvlvalues[1]);
                $("#" + orglevelcode2).data("kendoDropDownList").trigger("chage");
            } else if (orglvlvalues.length == 1) {
                $("#" + orglevelcode1).data("kendoDropDownList").value(orglvlvalues[0]);
                $("#" + orglevelcode1).data("kendoDropDownList").trigger("chage");
            }
        } else {
            $('#user_search').prop('hidden', true);
            $('#user_div').removeClass('input-group input-group-merge');
        }

        $("#refresh4").click(function () {
        //    var subCatgery = $("#subCatgery").val();
         //   var Catgery = $("#Catgery").val();
            

            var orglevelval1 = "";
            var orglevelval2 = "";
            var orglevelval3 = "";
            var orglevelval4 = "";
            var concatval = "";
            $.ajax({
                type: "POST",
                contentType: "application/json; charset=utf-8",
                async: false,
                url: '@Url.Action("getlabellist", "DocGroupMaster")',
                data: "{}",
                success: function (data) {
                    debugger;
                    // var orglevelcode1 = data[0].orghierarchy_code;
                    if (data.length >= 1) {
                        var orglevelcode1 = data[0].orghierarchy_code;
                        orglevelval1 = $("#" + orglevelcode1+"N").val();
                    }
                    if (data.length >= 2) {
                        var orglevelcode2 = data[1].orghierarchy_code;
                        orglevelval2 = $("#" + orglevelcode2 + "N").val();
                    }
                    if (data.length >= 3) {
                        var orglevelcode3 = data[2].orghierarchy_code;
                        orglevelval3 = $("#" + orglevelcode3 + "N").val();
                    }
                    if (data.length == 4) {
                        var orglevelcode4 = data[3].orghierarchy_code;
                        orglevelval4 = $("#" + orglevelcode4 + "N").val();
                    }

                    if (maxorglvl == 4 && orglevelval4 != "0" && orglevelval4 != 0 && orglevelval4 != "") {
                        concatval = orglevelval1 + "," + orglevelval2 + "," + orglevelval3 + "," + orglevelval4;
                    }
                    else if (maxorglvl == 3 && orglevelval3 != "0" && orglevelval3 != 0 && orglevelval3 != "") {
                        concatval = orglevelval1 + "," + orglevelval2 + "," + orglevelval3;
                    }
                    else if (maxorglvl == 2 && orglevelval2 != "0" && orglevelval2 != 0 && orglevelval2 != "") {
                        concatval = orglevelval1 + "," + orglevelval2;
                    }
                    else if (maxorglvl == 1 && orglevelval1 != "0" && orglevelval1 != 0 && orglevelval1 != "") {
                        concatval = orglevelval1;
                    }
                   
                    _readdata(concatval);
                }, error: function () {

                }
            });
          

        });

        $("#btn_transferusr").click(function () {
            debugger;
            empid = $('input[name="getempid"]:checked').val();
           // alert(empid);
            if (empid != "" && empid != "undefined" && empid != null) {
                window.location.href = '/EmployeeMaster/EmployeeMaster?mode=' + modeval +'&userid=' + empid;
            }          
        });

        $("#transfer").click(function () {
            $("#filter").show();
        });
        $("#btnShowResult").click(function () {
            $("#showresult").show();
            $("#showresult1").show();
        });

    //    $('input:radio[name="getempid"]').change(
    //    function () {
    //        debugger;
    //        if (this.checked) {
    //            empid = this.value;
    //            alert(empid);
    //        }
    //});

    });

    function _readdata(concatval) {
        var _username = $("#_username").val();
        var _usermobile = $("#_usermobile").val();
        var UGI = $("#UGI").val();
        var MyModel = {};
        debugger;
        if (_username == null || _username == "" || _username == "undefined") {
            return false;
        }
        MyModel.EmployeeName = _username;
        MyModel.MobileNo = _usermobile;
        MyModel.OrgLevelMax = concatval;
        MyModel.UserGroupID = UGI;
        $.ajax({
            url: '@Url.Action("EmployeeGrid_Read", "EmployeeMaster")',
          //  type: "POST",
            contentType: "application/json; charset=utf-8",
            //async: false,
            data: MyModel,
            success: function (data) {
                debugger;
                var value1 = data;
                for (var i = 0; i < value1.length; i++) {
                    var EmployeeID = value1[i].EmployeeID;
                    var EmployeeCode = value1[i].EmployeeCode;
                    var EmployeeName = value1[i].EmployeeName;
                    var MobileNo = value1[i].MobileNo;
                    var EmailID = value1[i].EmailID;
                    var role = value1[i].UserGroup;

                //    slno++;
                    var newRow = $('<tr id="tr'+i+'">');
                    var cols = "";
                    cols = '<td style="background-color: #eceef1;" hidden id ="empid' + i + '">' + EmployeeID + '</td>';
                    cols += '<td style="background-color: #eceef1;">' + EmployeeCode + '</td>';
                    cols += '<td style="background-color: #eceef1;">' + EmployeeName + '</td>';
                    cols += '<td style="background-color: #eceef1;">' + MobileNo + '</td>';
                    cols += '<td style="background-color: #eceef1;">' + EmailID + '</td>';
                    cols += '<td style="background-color: #eceef1;">' + role + '</td>';
                    cols += '<td align="center"><input name="getempid" class="form-check-input" type="radio" value="' + EmployeeID + '" id="defaultRadio1" /></td>';

                    newRow.append(cols);
                    $("#tbodyusrdtl").append(newRow);
                }
            }
        });

    }

    function onRequestEnd(e) {
        debugger;
        //Check request type
        if (e.type == "create") {
            //check for errors in the response
            if (e.response == null || e.response.Errors == null) {
                $.dialog({
                    title: 'DMS',
                    content: 'Employee has been created successfully!',
                    type: 'green',
                });
                setTimeout(function () {
                    debugger;
                    window.location.reload(1);
                }, 2000);

            }
        }
        if (e.type == "update") {
            //check for errors in the response
            if (e.response == null || e.response.Errors == null) {
                $.dialog({
                    title: 'DMS',
                    content: 'Employee has been Edited successfully!',
                    type: 'green',
                })
                setTimeout(function () {
                    debugger;
                    window.location.reload(1);
                }, 2000);
            }
        }
    }

    function onChangeunit() {
        debugger;
        var masteritemid = this.value();
        //var master = "Unit"
        var master = ""
        if (masteritemid == "" || masteritemid == null || masteritemid == "undefined" || masteritemid == 0) {
            return false;
        }
        else {

            var url = '@Url.Action("DocGroupNames", "DocGroupMaster")?parentcode=' + master + '&dependcode=' + masteritemid;
            $.getJSON(url, function (data) {
                debugger;
                var dept = data;
                if (dept.length > 1) {
                    var ee = data[1].parent_code;
                    $("#" + ee+"N").data("kendoDropDownList").value(data[1].master_code);
                    $("#" + ee+"N").data("kendoDropDownList").trigger("change");
                }
                else {
                    //var ee = data[0].parent_code;
                    //$("#" + ee).data("kendoDropDownList").select(0);
                }

            });
        }
    }

    function myDeleteJs() {
        debugger;
        var grid = $("#Employees").data("kendoGrid");
        var model = grid.dataItem($(event.target).closest("tr"));
        var EmployeeID = (model.EmployeeID);

        $.confirm({
            icon: 'fa fa-warning',
            title: 'DMS',
            autoClose: 'cancel|10000',
            theme: 'dark',
            animationSpeed: 700,
            content: 'Are you sure do you want to delete this record!',
            type: 'orange',
            buttons: {
                confirm: function () {
                    $.ajax({
                        type: "POST",
                        contentType: "application/json; charset=utf-8",
                        async: false,
                        url: '@Url.Action("DeletingEmployee", "EmployeeMaster")',
                        data: "{ EmployeeID:'" + EmployeeID + "'}",
                        success: function (data) {
                            debugger;
                            if (data == 'Success') {
                                $.alert({
                                    icon: 'fa fa-success',
                                    title: 'DMS',
                                    theme: 'dark',
                                    content: 'Record deleted.!',
                                    type: 'green',
                                    animationSpeed: 700,
                                });
                            }
                            setTimeout(function () {
                                window.location.reload(1);
                            }, 2500);
                        },
                    });
                },
                cancel: function () {
                    $.alert({
                        icon: 'fa fa-success',
                        title: 'DMS',
                        theme: 'dark',
                        content: 'Delete Canceled.!',
                        type: 'blue',
                        animationSpeed: 700,
                    });
                },
            }
        });
    }

    function setparams() {
        debugger
        var orglevelval1 = "";
        var orglevelval2 = "";
        var orglevelval3 = "";
        var orglevelval4 = "";
        var concatval = "";
        $.ajax({
            type: "POST",
            contentType: "application/json; charset=utf-8",
            async: false,
            url: '@Url.Action("getlabellist", "DocGroupMaster")',
            data: "{}",
            success: function (data) {
                debugger;
                // var orglevelcode1 = data[0].orghierarchy_code;
                if (data.length >= 1) {
                    var orglevelcode1 = data[0].orghierarchy_code;
                    orglevelval1 = $("#" + orglevelcode1).val();
                }
                if (data.length >= 2) {
                    var orglevelcode2 = data[1].orghierarchy_code;
                    orglevelval2 = $("#" + orglevelcode2).val();
                }
                if (data.length >= 3) {
                    var orglevelcode3 = data[2].orghierarchy_code;
                    orglevelval3 = $("#" + orglevelcode3).val();
                }
                if (data.length == 4) {
                    var orglevelcode4 = data[3].orghierarchy_code;
                    orglevelval4 = $("#" + orglevelcode4).val();
                }

                if (maxorglvl == 4) {
                    concatval = orglevelval1 + "," + orglevelval2 + "," + orglevelval3 + "," + orglevelval4;
                }
                else if (maxorglvl == 3) {
                    concatval = orglevelval1 + "," + orglevelval2 + "," + orglevelval3;
                }
                else if (maxorglvl == 2) {
                    concatval = orglevelval1 + "," + orglevelval2;
                }
                else if (maxorglvl == 1) {
                    concatval = orglevelval1;
                }
                // alert(orglevelcode1);
                //setTimeout(function () {
                //    window.location.reload(1);
                //}, 2500);
            },
        });

        return { orglvlmax: concatval };
    }

    function SaveEmpMaster() {
        debugger;
        var orglevelval1 = "";
        var orglevelval2 = "";
        var orglevelval3 = "";
        var orglevelval4 = "";
        var concatval = "";
        $.ajax({
            type: "POST",
            contentType: "application/json; charset=utf-8",
            async: false,
            url: '@Url.Action("getlabellist", "DocGroupMaster")',
            data: "{}",
            success: function (data) {
                debugger;
                // var orglevelcode1 = data[0].orghierarchy_code;
                if (data.length >= 1) {
                    var orglevelcode1 = data[0].orghierarchy_code;
                    orglevelval1 = $("#" + orglevelcode1).val();
                }
                if (data.length >= 2) {
                    var orglevelcode2 = data[1].orghierarchy_code;
                    orglevelval2 = $("#" + orglevelcode2).val();
                }
                if (data.length >= 3) {
                    var orglevelcode3 = data[2].orghierarchy_code;
                    orglevelval3 = $("#" + orglevelcode3).val();
                }
                if (data.length == 4) {
                    var orglevelcode4 = data[3].orghierarchy_code;
                    orglevelval4 = $("#" + orglevelcode4).val();
                }

                if (maxorglvl == 4) {
                    concatval = orglevelval1 + "," + orglevelval2 + "," + orglevelval3 + "," + orglevelval4;
                }
                else if (maxorglvl == 3) {
                    concatval = orglevelval1 + "," + orglevelval2 + "," + orglevelval3;
                }
                else if (maxorglvl == 2) {
                    concatval = orglevelval1 + "," + orglevelval2;
                }
                else if (maxorglvl == 1) {
                    concatval = orglevelval1;
                }
            },
        });
        if (modeval == "U") {
            update_empdtl(concatval);
        } else {
            save_empdtl(concatval);
        }

    }

    function save_empdtl(concatval) {
        debugger;
        var mymodel = getmodeldata(concatval);
        $.ajax({
           // type: "POST",
            contentType: "application/json; charset=utf-8",
           // async: false,
            url: '@Url.Action("SaveEmployee", "EmployeeMaster")',
            @*data: '{EDtlObj:'+ JSON.stringify(@Model) +', orglvlmax : ' + concatval + '}',*@
            data:mymodel,
            success: function (data) {
                debugger;
                $.dialog({
                    title: 'DMS',
                    content: 'User has been created successfully!',
                    type: 'green',
                });
                setTimeout(function () {
                    debugger;
                    window.location.reload(1);
                }, 2000);
            }, error: function (data) {
                $.dialog({
                    title: 'DMS',
                    content: data,
                    type: 'red',
                });
            }
        });
    }

    function getmodeldata(concatval) {
        debugger;
        var mymodel = {};
        if (modeval == "U") {
            mymodel.EmployeeID = $("#user_id").val();
        } else {
            mymodel.EmployeeID = "0";
        }
        mymodel.EmployeeCode = $("#userid").val();
        mymodel.EmployeeName = $("#EmpName").val();
        mymodel.MobileNo = $("#EmpMob").val();
        mymodel.EmailID = $("#EmpMail").val();
        mymodel.Password = $("#Password").val();
        mymodel.UserGroupID = $("#UserGroupID").val();
        mymodel.OrgLevelMax = concatval;
        return mymodel;
    }

        function update_empdtl(concatval) {
            debugger;
            var mymodel = getmodeldata(concatval);
            $.ajax({
               // type: "POST",
                contentType: "application/json; charset=utf-8",
               // async: false,
                url: '@Url.Action("EmployeeGrid_Update", "EmployeeMaster")',
                data: mymodel,
                success: function (data) {
                    debugger;
                    $.dialog({
                        title: 'DMS',
                        content: 'User has been Updated successfully!',
                        type: 'green',
                    });
                    setTimeout(function () {
                        debugger;
                        window.location.reload(1);
                    }, 2000);
                }, error: function (data) {
                    $.dialog({
                        title: 'DMS',
                        content: data,
                        type: 'red',
                    });
                }
            });
    }

    function onChangeunit1() {
        debugger;
        var masteritemid = this.value();
        //var master = "Unit"
        var master = ""
        if (masteritemid == "" || masteritemid == null || masteritemid == "undefined" || masteritemid == 0) {
            return false;
        }
        else {
            /*     $.getJSON("UnitDropDown/DocNameMaster?masteritemid=" + masteritemid + "&master=" + master, function (data) {
                     debugger;
                     var dept = data;
                     $("#Dept_Id").data("kendoDropDownList").dataSource.data(dept);

                     if (dept.length == 2) {
                         $("#Dept_Id").data("kendoDropDownList").select(1)
                     }
                     else {
                         $("#Dept_Id").data("kendoDropDownList").select(0)
                     }

                 });*/
            var url = '@Url.Action("DocGroupNames", "DocGroupMaster")?parentcode=' + master + '&dependcode=' + masteritemid;
            $.getJSON(url, function (data) {
                debugger;
                var dept = data;
                if (dept.length > 1) {
                    var ee = data[1].parent_code;
                    $("#" + ee).data("kendoDropDownList").value(data[1].master_code);
                    $("#" + ee).data("kendoDropDownList").trigger("change");
                }
                else {
                    //var ee = data[0].parent_code;
                    //$("#" + ee).data("kendoDropDownList").select(0);
                }

            });
        }
    }

    function mode_change(sel) {
        debugger;
        modeval = sel.value;
        if (modeval == "U") {
            window.location.href = '../EmployeeMaster/EmployeeMaster?mode=' + modeval + '&userid=' + empid;
        } else if (modeval == "V") {
            window.location.href = '../EmployeeMaster/EmployeeMaster?mode=' + modeval + '&userid=' + empid;
        } else {
            window.location.href = '../EmployeeMaster/EmployeeMaster?mode=' + modeval + '&userid=0';
        }
    }
</script>  