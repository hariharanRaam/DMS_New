@using Kendo.Mvc.UI;
@model DMS.Model.SetDocAttributes_Model

@using GleamTech.AspNet.Mvc
@using GleamTech.DocumentUltimate
@using GleamTech.DocumentUltimate.AspNet
@using GleamTech.DocumentUltimate.AspNet.UI
@using System.Web.UI.WebControls;
@{
    int i = 0;
}
<!DOCTYPE html>
<html>
<head>

    <title></title>
    <style type="text/css">
        body {
            font-family: Arial;
            font-size: 10pt;
        }

        .error {
            color: blue;
        }

        .div1 {
            border: 1px solid;
            padding: 10px;
            box-shadow: 5px 10px;
        }

        .asterisk_input:after {
            content: " *";
            color: #e32;
            position: absolute;
            margin: 0px 0px 0px -20px;
            font-size: xx-large;
            padding: 0 5px 0 0;
        }
    </style>

    <meta name="viewport" content="width=device-width" />
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,600,700,300italic,400italic,600italic">
</head>
<body class="hold-transition skin-blue sidebar-mini fixed">
    <!-- Content Wrapper. Contains page content -->
    <div class="content-wrapper">
        <!-- Main content -->
        <section class="content">
            <!-- Small boxes (Stat box) -->
            <div class="row">
                <div class="col-md-12">
                    <div class="box box-orange">
                        <div class="box-header text-left with-border" style="height:30px">
                            <h3 class="box-title" style="font-size:20px">Set Attributes against Document</h3>
                        </div>
                        <!-- /.box-header -->
                        <!-- form start -->
                        @*<form method="post" class="form-horizontal" enctype="multipart/form-data" id="form">*@
                        @using (Html.BeginForm("SaveAttributes", "SetDocAttributes", FormMethod.Post, new { @id = "form1" }))
                        {
                            <div class="box-body">
                                <div class="row">
                                    <div>
                                        <div style="margin:10px;border:groove thin;height:auto;width:auto">
                                            <table style="width:100%">
                                                <tr style="height:10px;">

                                                <tr style="height:30px;display: inline-block;">
                                                    <td style="left:15px; position:relative">
                                                        @Html.Label("Doc Name", new { style = "width:120px;font-weight: normal;" })
                                                    </td>
                                                    <td>
                                                        @Html.TextBoxFor(m => m.SubCateName, new Dictionary<string, object>() { { "readonly", "true" }, { "class", "form-control" }, { "style", "height:25px;width:225px;font-weight: normal;" }, { "Id", "SubCateName" } })
                                                    </td>
                                                </tr>


                                                <tr style="height:30px;display: inline-block;">
                                                    <td style="left:15px; position:relative">
                                                        @Html.Label("Doc Group", new { style = "width:120px;font-weight: normal;" })
                                                    </td>
                                                    <td>
                                                        @Html.TextBoxFor(m => m.CateName, new Dictionary<string, object>() { { "readonly", "true" }, { "class", "form-control" }, { "style", "height:25px;width: 225px;font-weight: normal;" }, { "Id", "CateName" } })
                                                    </td>
                                                </tr>


                                                @*<tr style="height:30px;">
                                                    <td style="left:15px; position:relative">
                                                        @Html.Label("Unit", new { style = "width:120px;font-weight: normal;" })
                                                    </td>
                                                    <td>
                                                        @Html.TextBoxFor(m => m.UnitName, new Dictionary<string, object>() { { "readonly", "true" }, { "class", "form-control" }, { "style", "height:25px;font-weight: normal;" }, { "Id", "UnitName" } })
                                                    </td>
                                                </tr>


                                                <tr style="height:30px;">

                                                    <td style="left:15px; position:relative">
                                                        @Html.Label("Department", new { style = "width:120px;font-weight: normal;" })
                                                    </td>
                                                    <td>
                                                        @Html.TextBoxFor(m => m.DeptName, new Dictionary<string, object>() { { "readonly", "true" }, { "class", "form-control" }, { "style", "height:25px;font-weight: normal;" }, { "Id", "DeptName" } })
                                                    </td>
                                                </tr>*@

                                                <tr style="height:30px;display:none" id="orgcol4">
                                                    <td style="left:15px; position:relative">
                                                        <label style="width:120px;font-weight: normal;" id="orglvl4lbl">Orglvl4</label>
                                                    </td>
                                                    <td>
                                                        <input type="text" id="orglvl4val" disabled style="height:25px;font-weight:normal;font-size: 13px;width: 225px;" class="form-control" />
                                                    </td>
                                                </tr>

                                                <tr style="height:30px;display:none" id="orgcol3">
                                                    <td style="left:15px; position:relative">
                                                        <label style="width:120px;font-weight: normal;" id="orglvl3lbl">Orglvl3</label>
                                                    </td>
                                                    <td>
                                                        <input type="text" id="orglvl3val" disabled style="height:25px;font-weight:normal;font-size: 13px;width: 225px;" class="form-control" />
                                                    </td>
                                                </tr>

                                                <tr style="height:30px;display:none" id="orgcol2">
                                                    <td style="left:15px; position:relative">
                                                        <label style="width:120px;font-weight: normal;" id="orglvl2lbl">Orglvl2</label>
                                                    </td>
                                                    <td>
                                                        <input type="text" id="orglvl2val" disabled style="height:25px;font-weight:normal;font-size: 13px;width: 225px;" class="form-control" />
                                                    </td>
                                                </tr>

                                                <tr style="height:30px;display:none" id="orgcol1">
                                                    <td style="left:15px; position:relative">
                                                        <label style="width:120px;font-weight: normal;" id="orglvl1lbl">Orglvl1</label>
                                                    </td>
                                                    <td>
                                                        <input type="text" id="orglvl1val" disabled style="height:25px;font-weight:normal;font-size: 13px;width: 225px;" class="form-control" />
                                                    </td>
                                                </tr>

                                            </table>
                                        </div>
                                        <div style="height:15px"></div>

                                        <div style="margin:10px">
                                            <table>
                                                @{
                            var documentViewer = new DocumentViewer
        {
            //Width = 700,
            Height = 570,
            Document = ViewBag.FilePath
        };
                                                }
                                                @this.RenderBody(documentViewer)
                                                @this.RenderHead(documentViewer)

                                            </table>
                                        </div>

                                        <div style="height:auto;overflow:auto;overflow-x: hidden;width:auto;border:groove thin;margin:10px">
                                            <table>
                                                <tr style="height:5px;"></tr>

                                                @foreach (var category in Model.dept)
                                                {
                                                    <tr style="height:30px;display: inline-block;">

                                                        <td style="left:15px; position:relative">
                                                            <label style="width:120px;font-weight: normal;">@category.attrbname </label>
                                                        </td>

                                                        @if (category.attrbtype == "Datetime")
                                                        {
                                                            <td>
                                                                @Html.Editor("ctl" + i, @category.attrbdesc, new { htmlAttributes = new { @class = "form-control", style = "height:25px;width:225px;font-weight: normal;" } })

                                                            </td>
                                                        }
                                                        @if (category.attrbtype == "Alpha Numeric")
                                                        {
                                                            <td style="width:120px">
                                                                @Html.TextBox("ctl" + i, @category.attrbdesc, new { @class = "form-control", style = "height:25px;width:225px;font-weight: normal;" })
                                                            </td>
                                                        }
                                                        @if (category.attrbtype == "Numeric")
                                                        {
                                                            <td style="width:120px">
                                                                @Html.TextBox("ctl" + i, @category.attrbdesc, new { @class = "form-control", style = "height:25px;width:225px;font-weight: normal;", onkeypress = "return NumersOnly(event)" })
                                                            </td>
                                                        }
                                                        @if (category.attrbtype == "Amount")
                                                        {
                                                            <td style="width:120px">
                                                                @Html.TextBox("ctl" + i, @category.attrbdesc, new { @class = "form-control", style = "height:25px;width:225px;font-weight: normal;", onkeypress = "return isNumberKey(event)" })
                                                            </td>
                                                        }
                                                        @if (category.attrbtype == "Logical")
                                                        {

                                                            <td style="width:120px">
                                                                <div class="radio" style="left:25px; position:relative"> @Html.RadioButton("ctl" + i, "Yes") Yes &nbsp;&nbsp;&nbsp;&nbsp;  @Html.RadioButton("ctl" + i, "No") No</div>
                                                            </td>
                                                        }

                                                        @if (category.attrbtype == "Lov Name")
                                                        {
                                                            <td>
                                                                @*@Html.DropDownList("ctl" + i, (IEnumerable<SelectListItem>)ViewBag.Lovexl_Name, @category.attrbdesc, new { @class = "orm-control", style = "height:25px;width:225px;font-weight: normal;" })*@
                                                                @Html.DropDownList("ctl" + i, category.LovName, @category.attrbdesc, new { @class = "orm-control", style = "height:25px;width:225px;font-weight: normal;" })

                                                            </td>
                                                        }
                                                        
                                                        @if (category.attrbtype == "AutoNumber")
                                                        {
                                                        <td style="width:120px">
                                                            @Html.TextBox("ctl" + i, @category.autonumbervalue, new { @class = "form-control", style = "height:25px;width:225px;font-weight: normal;", @readonly = true })
                                                            @Html.TextBox("ctl" + i, @category.autonumberrowid, new { @class = "form-control", style = "height:25px;width:225px;font-weight: normal;", @hidden = true })
                                                        </td>
                                                        }

                                                        @if (category.attrbMand == "Y")
                                                        {
                                                            <td><label style="width:5px;color:red;font-size:larger">*</label> </td>
                                                        }
                                                    </tr>
                                                        i++;

                                                }
                                                <tr style="height:30px;display: inline-block;">
                                                    <td style="left:15px; position:relative">
                                                        <label style="width:120px;font-weight: normal;">Active</label>
                                                    </td>
                                                    <td style="width:120px">
                                                        <div class="radio" style="left:25px; position:relative"> 
                                                            <input type="radio" value="Y" name="active_flag" id="rbY" checked /> Yes &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                                            <input type="radio" value="N" name="active_flag" id="rbN" /> No
                                                        </div>
                                                    </td>
                                                </tr>
                                                <tr></tr>
                                            </table>
                                        </div>

                                        @*<div style="height:15px"></div>*@

                                        <div style="width:auto;border:groove thin;height:auto;margin:10px;display:none">
                                            <table>
                                                <tr style="height:10px;"></tr>
                                                <tr style="height:30px;display: inline-block;">
                                                    <td style="left:15px; position:relative">
                                                        @Html.Label("File Name", new { style = "width:120px;font-weight: normal;" })
                                                    </td>
                                                    <td>
                                                        @Html.TextBoxFor(m => m.FileName, new Dictionary<string, object>() { { "readonly", "true" }, { "class", "form-control" }, { "style", "height:25px;width:225px;font-weight: normal;" } })

                                                    </td>

                                                </tr>
                                                <tr style="height:30px;display: inline-block;">
                                                    <td style="left:15px; position:relative">
                                                        @Html.Label("File Type", new { style = "width:120px;font-weight: normal;" })
                                                    </td>
                                                    <td>
                                                        @Html.TextBoxFor(m => m.FileType, new Dictionary<string, object>() { { "readonly", "true" }, { "class", "form-control" }, { "style", "height:25px;width:225px;font-weight: normal;" } })
                                                    </td>
                                                </tr>
                                                <tr style="height:30px;display: inline-block;">
                                                    <td style="left:15px; position:relative">
                                                        @Html.Label("Version Name", new { style = "width:120px;font-weight: normal;" })
                                                    </td>
                                                    <td>

                                                        @Html.TextBoxFor(m => m.VersionName, new Dictionary<string, object>() { { "readonly", "true" }, { "class", "form-control" }, { "style", "height:25px;width:225px;font-weight: normal;" } })
                                                    </td>
                                                </tr>
                                                <tr style="height:30px;display: inline-block;">
                                                    <td style="left:15px; position:relative">
                                                        @Html.Label("Version Date", new { style = "width:120px;font-weight: normal;" })
                                                    </td>
                                                    <td>
                                                        @Html.EditorFor(model => model.VersionDate, new { htmlAttributes = new { @class = "form-control", style = "height:25px;width:225px;font-weight: normal;", disabled = "disabled", @readonly = "readonly" } })
                                                    </td>
                                                </tr>
                                                <tr style="height:30px;display: inline-block;">
                                                    <td style="left:15px; position:relative">
                                                        @Html.Label("Signature", new { style = "width:120px;font-weight: normal;" })
                                                    </td>
                                                    <td>

                                                        @Html.TextBoxFor(m => m.Signature, new Dictionary<string, object>() { { "readonly", "true" }, { "class", "form-control" }, { "style", "height:25px;width:225px;font-weight: normal;" } })
                                                    </td>
                                                </tr>

                                                <tr>
                                                    <td>
                                                        @Html.HiddenFor(m => m.HideDocArchId, new { @class = "form-control", style = "height:25px;" })
                                                    </td>
                                                    <td>
                                                        @Html.HiddenFor(m => m.Filepathfrom, new { @class = "form-control", style = "height:25px;" })
                                                    </td>

                                                </tr>
                                            </table>
                                        </div>
                                        <div style="height:5px"></div>
                                        <div >
                                            <table align="center">
                                                <tr style="height:8px"></tr>
                                                <tr>
                                                    <td>
                                                        <button type="button" name="btncancel" value="Cancel" id="btn_Cancel" class="btn btn-danger pull-right" onclick="return Cancel()">Cancel</button>
                                                    </td>
                                                    <td width="5px"></td>
                                                    <td>
                                                        <input type="button" name="btnsubmit" value="@ViewBag.SubmitValue" id="btn_save" onclick="return CheckUserInputs()" class="btn btn-orange pull-right" />
                                                    </td>
                                                    <td>
                                                        @Html.HiddenFor(model => model.attrbmode, new { id = "attrbmode" })
                                                    </td>
                                                </tr>
                                                <tr style="height:8px"></tr>
                                            </table>
                                        </div>

                                    </div>
                                </div>
                                @*<div class="row">
                                 
                                </div>*@

                            </div>

                            <div class="box-footer" style="height:30px;">
                                <div style="color:green">
                                    <table align="center">
                                        <tr>
                                            <td>
                                                <span class="Success_show">@ViewBag.message</span>
                                            </td>
                                        </tr>
                                    </table>
                                </div>
                            </div>
                        }
                        @*</form>*@
                    </div>
                </div>
            </div>
        </section>
    </div>

</body>
@*@Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")*@
</html>

<script type="text/javascript">

    $(document).ready(function() {
        loaddynamiccolumns();
        var orglvl4 = "@ViewBag.Orglvlval4";
        var orglvl3 = "@ViewBag.Orglvlval3";
        var orglvl2 = "@ViewBag.Orglvlval2";
        var orglvl1 = "@ViewBag.Orglvlval1";
       // alert(orglvl4);
        if(orglvl4 != "" && orglvl4 != null && orglvl4 != "undefined"){
            $("#orglvl4val").val(orglvl4);
       //     $('#' + id).css('display', 'inline-block');
            $("#orgcol4").css('display', 'inline-block');
        }
        if(orglvl3 != "" && orglvl3 != null && orglvl3 != "undefined"){
            $("#orglvl3val").val(orglvl3);
            $("#orgcol3").css('display', 'inline-block');
        }
        if(orglvl2 != "" && orglvl2 != null && orglvl2 != "undefined"){
            $("#orglvl2val").val(orglvl2);
            $("#orgcol2").css('display', 'inline-block');
        }
        if(orglvl1 != "" && orglvl1 != null && orglvl1 != "undefined"){
            $("#orglvl1val").val(orglvl1);
            $("#orgcol1").css('display', 'inline-block')
        }
        $("#VersionName").val("0.1");
        $("#Signature").val("Test");
        var UsersList = @Html.Raw(Json.Encode(@Model.dept))
        var i=0;
        var mode
        $.each(UsersList, function (index, item) {
            debugger;
            var Atrtype = item.attrbtype;
            mode = item.attrbmode;
            if (Atrtype == "Datetime") {
                $('#ctl' + i).datepicker({
                    dateFormat:"dd-mm-yy",
                    changeMonth :true,
                    changeYear: true  })
                if(mode=="E" || mode=="D")
                {
                    $('#ctl'+i).datepicker('setDate', item.attrbdesc)
                }
                else
                {
                    $('#ctl'+i).datepicker('setDate', 'today')
                }

            }
            i++;
        });


        $("#VersionDate").datepicker({dateFormat:"dd-mm-yy",
            changeMonth :true,
            changeYear: true  });
        if(mode=="E")
        {
        }
        else{
            $('#VersionDate').datepicker('setDate', 'today')
        }

    });
    function loaddynamiccolumns() {
        try {
            $.ajax({
                type: "POST",
                contentType: "application/json; charset=utf-8",
                async: false,
                url: '@Url.Action("getlabellist", "DocGroupMaster")',
                data: "{}",
                success: function (data) {
                    debugger;
                    // var orglevelcode1 = data[0].orghierarchy_code;
                    if (data.length >= 1) {
                        orglevelcode1 = data[0].orghierarchy_code;
                        var org1val = data[0].orghierarchy_name;
                        $("#orglvl1lbl").text(org1val);
                        // orglevelval1 = $("#" + orglevelcode1).val();
                    }
                    if (data.length >= 2) {
                        orglevelcode2 = data[1].orghierarchy_code;
                        var org1va2 = data[1].orghierarchy_name;
                        $("#orglvl2lbl").text(org1va2);
                        // orglevelval2 = $("#" + orglevelcode2).val();
                    }
                    if (data.length >= 3) {
                        orglevelcode3 = data[2].orghierarchy_code;
                        var org1va3 = data[2].orghierarchy_name;
                        $("#orglvl3lbl").text(org1va3);
                        //orglevelval3 = $("#" + orglevelcode3).val();
                    }
                    if (data.length == 4) {
                        orglevelcode4 = data[3].orghierarchy_code;
                        var org1va4 = data[3].orghierarchy_name;
                        $("#orglvl4lbl").text(org1va4);
                        //orglevelval4 = $("#" + orglevelcode4).val();
                    }


                    // alert(orglevelcode1);
                    //setTimeout(function () {
                    //    window.location.reload(1);
                    //}, 2500);
                },
            });
        } catch (er) {
            alert(er);
        }
    }
    function isNumberKey(evt) {
        debugger;
        var charCode = (evt.which) ? evt.which : evt.keyCode;
        if (charCode != 46 && charCode > 31
          && (charCode < 48 || charCode > 57))
            return false;

        return true;
    }

    function NumersOnly(evt) {
        debugger;
        if (evt.keyCode == '9' || evt.keyCode == '16') {
            return;
        }
        evt.keyCode
        var code;
        if (evt.keyCode) code = evt.keyCode;
        else if (evt.which) code = evt.which;
        if (evt.which == 46)
            return false;
        if (code == 8 || code == 46)
            return true;
        if (code < 48 || code > 57)
            return false;
    }

    function CheckUserInputs() {
        debugger;
        var person = {};
       // person.DeptName = $('#DeptName').val();
       // person.UnitName = $('#UnitName').val();
       // person.CateName = $('#CateName').val();
        person.SubCateName = $('#SubCateName').val();
        person.FileName = $('#FileName').val();
        person.FileType = $('#FileType').val();
        person.VersionName = $('#VersionName').val();
        person.VersionDate = $('#VersionDate').val();
        person.Signature = $('#Signature').val();
        person.HideDocArchId = $('#HideDocArchId').val();
        person.Filepathfrom = $('#Filepathfrom').val();
        person.activeflag = $("input[name='active_flag']:checked").val();

        var UsersList = @Html.Raw(Json.Encode(@Model.dept))

        var count = '@ViewBag.AttributeCount';

        var ret = 0;
        var Dyntextvalues = [];
        var i = 0;
        $.each(UsersList, function (index, item) {
            debugger;

            var Atrtype = item.attrbtype;
            var Atrlength = item.attrblen;
            var Atrmandotry = item.attrbMand;

            if (Atrtype == "Logical") {
                var gettxtdesval = $('input[id=ctl' + i + ']:checked').val()
                if (Atrmandotry == "Y") {
                    if (gettxtdesval == undefined) {
                        $.alert({
                            title: 'DMS',
                            content: item.attrbname + ' ' + 'field must have some input because it is mandtory field.!',
                            type: 'blue',
                        });
                        //alert(item.attrbname + ' ' + 'field must have some input because it is mandotry Field.');
                        return false;
                    }
                    else {
                        Dyntextvalues.push(gettxtdesval);
                    }
                }
                else {
                    if (gettxtdesval == undefined) {
                        gettxtdesval = "";
                        Dyntextvalues.push(gettxtdesval);
                    }
                    else {
                        Dyntextvalues.push(gettxtdesval);
                    }
                }

            }
            else {
                if (Atrtype == "Lov Name") {
                    if (Atrmandotry == "Y") {
                        var gettxtdesval = $('#ctl' + i +' '+ 'option:selected').text();
                        if(gettxtdesval=="-Select-"){
                            $.alert({
                                title: 'DMS',
                                content: 'Please select value into the' + ' ' + item.attrbname + ' ' + 'field because it is mandotry field.!',
                                type: 'blue',
                            });
                            //alert('Please select the Value into the' + ' ' + item.attrbname + ' ' + 'field because it is mandotry field.')
                            ret = 0;
                            return false;
                        }
                        else
                        {
                            Dyntextvalues.push(gettxtdesval);
                        }
                    }
                }
                else
                {
                    var gettxtdesval = $('#ctl' + i).val();
                    Dyntextvalues.push(gettxtdesval);
                    var findtxtlen = gettxtdesval.length;
                }
            }

            if (Atrtype == "Alpha Numeric") {
                if (findtxtlen > Atrlength) {
                    $.alert({
                        title: 'DMS',
                        content: item.attrbname + ' ' + 'field length should not be greater then' + ' ' + Atrlength,
                        type: 'blue',
                    });
                    //alert(item.attrbname + ' ' + "field length should not be greater then" + ' ' + Atrlength)
                    ret = 0;
                    return false;

                }
            }
            //if (Atrtype == "Lov Name") {
            //    if (Atrmandotry == "Y") {
            //        var gettxtdesval = $('#ctl' + i +' '+ 'option:selected').text();
            //        if(gettxtdesval=="-Select-"){
            //            alert('Please select the Value into the' + ' ' + item.attrbname + ' ' + 'field because it is mandotry field.')
            //            ret = 0;
            //            return false;
            //        }
            //    }
            //}
            if (Atrmandotry == "Y") {
                if (gettxtdesval == "") {
                    $.alert({
                        title: 'DMS',
                        content: item.attrbname + ' ' + 'field must have some input because it is mandotry field.!',
                        type: 'blue',
                    });
                    //alert(item.attrbname + ' ' + 'field must have some input because it is mandotry Field.')
                    ret = 0;
                    return false;
                }

                if (Atrtype == "Datetime") {
                    var isDate = (new Date(gettxtdesval) !== "Invalid Date")
                    if (isDate == false) {
                        $.alert({
                            title: 'DMS',
                            content: 'Please enter the date value into' + ' ' + item.attrbname + ' ' + 'field because it is datetime type.!',
                            type: 'blue',
                        });
                        //alert('Please enter the Date Value into the' + ' ' + item.attrbname + ' ' + 'field because it is having Datetime type.')
                        ret = 0;
                        return false;
                    }
                }

            }
            i++;
            ret = 1;
        });

        var postData = " form : [ "
        $.each(Dyntextvalues, function (index, item) {
            debugger;
            if (index == count - 1) {
                postData = postData + "'" + Dyntextvalues[index] + "'";
            } else {
                postData = postData + "'" + Dyntextvalues[index] + "',";
            }
        });

        postData = postData + "]";

        //remaind to remove the below line
        //ret = 0;

        if (ret == "1" || UsersList.length == "0") {
            debugger;
            var flag=$("#attrbmode").val();
            if(flag=='I')
            {
                @*$.ajax({
                    type: "POST",
                    cache: false,
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    url: '@Url.Action("ValidateAttributes", "SetDocAttributes")',
                    data: '{deptsModel: ' + JSON.stringify(person) + ',' + postData + '}',
                    success: function (data) {
                        debugger;
                        if(data=="duplicate found")
                        {
                            $.confirm({
                                icon: 'fa fa-warning',
                                title: 'DMS',
                                autoClose: 'cancel|10000',
                                theme: 'dark',
                                animationSpeed: 700,
                                content: 'The attribute duplication occurred do you want to overwrite.!',
                                type: 'orange',
                                buttons: {
                                    confirm: function () {
                                        $.ajax({
                                            type: "POST",
                                            cache: false,
                                            contentType: "application/json; charset=utf-8",
                                            dataType: "json",
                                            url: '@Url.Action("SaveAttributes", "SetDocAttributes")',
                                            data: '{deptsModel: ' + JSON.stringify(person) + ',' + postData + '}',
                                            success: function (data) {
                                                debugger;
                                                if (data.status == 1) {
                                                    $.alert({
                                                        title: 'DMS',
                                                        content: 'Document saved successfully.!',
                                                        type: 'green',
                                                    });
                                                    setTimeout(function () {
                                                        debugger;
                                                        window.location.href = data.redirectUrl;
                                                    }, 1500);

                                                }
                                            },
                                            error: function () {
                                            }
                                        });

                                    },
                                    cancel: function () {
                                        $.alert({
                                            icon: 'fa fa-success',
                                            title: 'DMS',
                                            theme: 'dark',
                                            content: 'Index Canceled.!',
                                            type: 'blue',
                                            animationSpeed: 700,
                                        });
                                    },
                                }
                            });
                        }
                        else
                        {
                            $.ajax({
                                type: "POST",
                                cache: false,
                                contentType: "application/json; charset=utf-8",
                                dataType: "json",
                                url: '@Url.Action("SaveAttributes", "SetDocAttributes")',
                                data: '{deptsModel: ' + JSON.stringify(person) + ',' + postData + '}',
                                success: function (data) {
                                    debugger;
                                    if (data.status == 1) {
                                        $.alert({
                                            title: 'DMS',
                                            content: 'Document saved successfully.!',
                                            type: 'green',
                                        });
                                        setTimeout(function () {
                                            debugger;
                                            window.location.href = data.redirectUrl;
                                        }, 1500);

                                    }
                                },
                                error: function () {
                                }
                            });
                        }
                    },
                    error: function () {
                        $.alert({
                            title: 'DMS',
                            content: 'some error occured .!',
                            type: 'red',
                        });
                    }
                });*@

                $.ajax({
                    type: "POST",
                    cache: false,
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    url: '@Url.Action("SaveAttributes", "SetDocAttributes")',
                    data: '{deptsModel: ' + JSON.stringify(person) + ',' + postData + '}',
                    success: function (data) {
                        debugger;
                        if (data.status == 1) {
                            $.alert({
                                title: 'DMS',
                                content: 'Document saved successfully.!',
                                type: 'green',
                            });
                            setTimeout(function () {
                                debugger;
                                window.location.href = data.redirectUrl;
                            }, 1500);

                        }
                    },
                    error: function () {
                    }
                });
            }
            if(flag=='E'||flag=='D')
            {
                $.ajax({
                    type: "POST",
                    cache: false,
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    url: '@Url.Action("SaveAttributes", "SetDocAttributes")',
                    data: '{deptsModel: ' + JSON.stringify(person) + ',' + postData + '}',
                    success: function (data) {
                        debugger;
                        //if (data.status == 1) {
                        //    $.alert({
                        //        title: 'DMS',
                        //        content: 'Document saved successfully.!',
                        //        type: 'green',
                        //    });
                        //    setTimeout(function () {
                        //        debugger;
                        //        window.location.href = data.redirectUrl;
                        //    }, 1500);
                        //}
                        if (data.status == 2) {
                            $.alert({
                                title: 'DMS',
                                content: 'Document edited successfully.!',
                                type: 'green',
                            });
                            setTimeout(function () {
                                debugger;
                                window.location.href = data.redirectUrl1;
                            }, 1500);

                        }
                        if (data.status == 3) {
                            $.alert({
                                title: 'DMS',
                                content: 'Document deleted successfully.!',
                                type: 'green',
                            });
                            setTimeout(function () {
                                debugger;
                                window.location.href = data.redirectUrl1;
                            }, 1500);

                        }
                    },
                    error: function () {
                    }
                });
            }
        }
    }

    function Cancel() {
        debugger;
        window.location.reload();
    }


</script>


